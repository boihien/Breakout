
structure.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  0000157e  00001612  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000157e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000040  0080012a  0080012a  0000163c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000163c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000166c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  000016ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ed8  00000000  00000000  00001804  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ac8  00000000  00000000  000036dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000122f  00000000  00000000  000041a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000034c  00000000  00000000  000053d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008bd  00000000  00000000  00005720  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001349  00000000  00000000  00005fdd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  00007326  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	5d c0       	rjmp	.+186    	; 0xbc <__ctors_end>
       2:	00 00       	nop
       4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
       6:	00 00       	nop
       8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
       a:	00 00       	nop
       c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
       e:	00 00       	nop
      10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
      12:	00 00       	nop
      14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
      16:	00 00       	nop
      18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
      22:	00 00       	nop
      24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
      26:	00 00       	nop
      28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
      32:	00 00       	nop
      34:	a0 c0       	rjmp	.+320    	; 0x176 <__vector_13>
      36:	00 00       	nop
      38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
      42:	00 00       	nop
      44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
      46:	00 00       	nop
      48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
      52:	00 00       	nop
      54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
      56:	00 00       	nop
      58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
      62:	00 00       	nop
      64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
      66:	00 00       	nop
      68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
      72:	00 00       	nop
      74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
      76:	00 00       	nop
      78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
      82:	00 00       	nop
      84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
      86:	00 00       	nop
      88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	9f 03       	fmulsu	r17, r23
      8e:	79 03       	fmul	r23, r17
      90:	80 03       	fmuls	r16, r16
      92:	8d 03       	fmulsu	r16, r21
      94:	d2 03       	fmuls	r21, r18
      96:	96 03       	fmuls	r17, r22
      98:	d2 03       	fmuls	r21, r18
      9a:	32 04       	cpc	r3, r2
      9c:	0f 04       	cpc	r0, r15
      9e:	14 04       	cpc	r1, r4
      a0:	19 04       	cpc	r1, r9
      a2:	32 04       	cpc	r3, r2
      a4:	32 04       	cpc	r3, r2
      a6:	3d 04       	cpc	r3, r13
      a8:	8d 06       	cpc	r8, r29
      aa:	f8 05       	cpc	r31, r8
      ac:	0f 06       	cpc	r0, r31
      ae:	21 06       	cpc	r2, r17
      b0:	33 06       	cpc	r3, r19
      b2:	45 06       	cpc	r4, r21
      b4:	57 06       	cpc	r5, r23
      b6:	69 06       	cpc	r6, r25
      b8:	7b 06       	cpc	r7, r27
      ba:	fd 05       	cpc	r31, r13

000000bc <__ctors_end>:
      bc:	11 24       	eor	r1, r1
      be:	1f be       	out	0x3f, r1	; 63
      c0:	cf ef       	ldi	r28, 0xFF	; 255
      c2:	d0 e4       	ldi	r29, 0x40	; 64
      c4:	de bf       	out	0x3e, r29	; 62
      c6:	cd bf       	out	0x3d, r28	; 61

000000c8 <__do_copy_data>:
      c8:	11 e0       	ldi	r17, 0x01	; 1
      ca:	a0 e0       	ldi	r26, 0x00	; 0
      cc:	b1 e0       	ldi	r27, 0x01	; 1
      ce:	ee e7       	ldi	r30, 0x7E	; 126
      d0:	f5 e1       	ldi	r31, 0x15	; 21
      d2:	00 e0       	ldi	r16, 0x00	; 0
      d4:	0b bf       	out	0x3b, r16	; 59
      d6:	02 c0       	rjmp	.+4      	; 0xdc <__do_copy_data+0x14>
      d8:	07 90       	elpm	r0, Z+
      da:	0d 92       	st	X+, r0
      dc:	aa 32       	cpi	r26, 0x2A	; 42
      de:	b1 07       	cpc	r27, r17
      e0:	d9 f7       	brne	.-10     	; 0xd8 <__do_copy_data+0x10>

000000e2 <__do_clear_bss>:
      e2:	21 e0       	ldi	r18, 0x01	; 1
      e4:	aa e2       	ldi	r26, 0x2A	; 42
      e6:	b1 e0       	ldi	r27, 0x01	; 1
      e8:	01 c0       	rjmp	.+2      	; 0xec <.do_clear_bss_start>

000000ea <.do_clear_bss_loop>:
      ea:	1d 92       	st	X+, r1

000000ec <.do_clear_bss_start>:
      ec:	aa 36       	cpi	r26, 0x6A	; 106
      ee:	b2 07       	cpc	r27, r18
      f0:	e1 f7       	brne	.-8      	; 0xea <.do_clear_bss_loop>
      f2:	b7 d7       	rcall	.+3950   	; 0x1062 <main>
      f4:	0c 94 bd 0a 	jmp	0x157a	; 0x157a <_exit>

000000f8 <__bad_interrupt>:
      f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <SMTick5>:
	unsigned char c = column;
	while(*string) {
		LCD_Cursor(c++);
		LCD_WriteData(*string++);
	}
}
      fa:	01 96       	adiw	r24, 0x01	; 1
      fc:	02 97       	sbiw	r24, 0x02	; 2
      fe:	18 f0       	brcs	.+6      	; 0x106 <SMTick5+0xc>
     100:	8f ef       	ldi	r24, 0xFF	; 255
     102:	9f ef       	ldi	r25, 0xFF	; 255
     104:	08 95       	ret
     106:	80 e0       	ldi	r24, 0x00	; 0
     108:	90 e0       	ldi	r25, 0x00	; 0
     10a:	08 95       	ret

0000010c <TimerSet>:
     10c:	60 93 1b 01 	sts	0x011B, r22	; 0x80011b <_avr_timer_M>
     110:	70 93 1c 01 	sts	0x011C, r23	; 0x80011c <_avr_timer_M+0x1>
     114:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <_avr_timer_M+0x2>
     118:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <_avr_timer_M+0x3>
     11c:	60 93 4b 01 	sts	0x014B, r22	; 0x80014b <_avr_timer_cntcurr>
     120:	70 93 4c 01 	sts	0x014C, r23	; 0x80014c <_avr_timer_cntcurr+0x1>
     124:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <_avr_timer_cntcurr+0x2>
     128:	90 93 4e 01 	sts	0x014E, r25	; 0x80014e <_avr_timer_cntcurr+0x3>
     12c:	08 95       	ret

0000012e <TimerOn>:
     12e:	8b e0       	ldi	r24, 0x0B	; 11
     130:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     134:	8d e7       	ldi	r24, 0x7D	; 125
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     13c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     140:	82 e0       	ldi	r24, 0x02	; 2
     142:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     146:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     14a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     14e:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <_avr_timer_M>
     152:	90 91 1c 01 	lds	r25, 0x011C	; 0x80011c <_avr_timer_M+0x1>
     156:	a0 91 1d 01 	lds	r26, 0x011D	; 0x80011d <_avr_timer_M+0x2>
     15a:	b0 91 1e 01 	lds	r27, 0x011E	; 0x80011e <_avr_timer_M+0x3>
     15e:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <_avr_timer_cntcurr>
     162:	90 93 4c 01 	sts	0x014C, r25	; 0x80014c <_avr_timer_cntcurr+0x1>
     166:	a0 93 4d 01 	sts	0x014D, r26	; 0x80014d <_avr_timer_cntcurr+0x2>
     16a:	b0 93 4e 01 	sts	0x014E, r27	; 0x80014e <_avr_timer_cntcurr+0x3>
     16e:	8f b7       	in	r24, 0x3f	; 63
     170:	80 68       	ori	r24, 0x80	; 128
     172:	8f bf       	out	0x3f, r24	; 63
     174:	08 95       	ret

00000176 <__vector_13>:
     176:	1f 92       	push	r1
     178:	0f 92       	push	r0
     17a:	0f b6       	in	r0, 0x3f	; 63
     17c:	0f 92       	push	r0
     17e:	11 24       	eor	r1, r1
     180:	8f 93       	push	r24
     182:	9f 93       	push	r25
     184:	af 93       	push	r26
     186:	bf 93       	push	r27
     188:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <_avr_timer_cntcurr>
     18c:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <_avr_timer_cntcurr+0x1>
     190:	a0 91 4d 01 	lds	r26, 0x014D	; 0x80014d <_avr_timer_cntcurr+0x2>
     194:	b0 91 4e 01 	lds	r27, 0x014E	; 0x80014e <_avr_timer_cntcurr+0x3>
     198:	01 97       	sbiw	r24, 0x01	; 1
     19a:	a1 09       	sbc	r26, r1
     19c:	b1 09       	sbc	r27, r1
     19e:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <_avr_timer_cntcurr>
     1a2:	90 93 4c 01 	sts	0x014C, r25	; 0x80014c <_avr_timer_cntcurr+0x1>
     1a6:	a0 93 4d 01 	sts	0x014D, r26	; 0x80014d <_avr_timer_cntcurr+0x2>
     1aa:	b0 93 4e 01 	sts	0x014E, r27	; 0x80014e <_avr_timer_cntcurr+0x3>
     1ae:	89 2b       	or	r24, r25
     1b0:	8a 2b       	or	r24, r26
     1b2:	8b 2b       	or	r24, r27
     1b4:	99 f4       	brne	.+38     	; 0x1dc <__vector_13+0x66>
     1b6:	81 e0       	ldi	r24, 0x01	; 1
     1b8:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <TimerFlag>
     1bc:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <_avr_timer_M>
     1c0:	90 91 1c 01 	lds	r25, 0x011C	; 0x80011c <_avr_timer_M+0x1>
     1c4:	a0 91 1d 01 	lds	r26, 0x011D	; 0x80011d <_avr_timer_M+0x2>
     1c8:	b0 91 1e 01 	lds	r27, 0x011E	; 0x80011e <_avr_timer_M+0x3>
     1cc:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <_avr_timer_cntcurr>
     1d0:	90 93 4c 01 	sts	0x014C, r25	; 0x80014c <_avr_timer_cntcurr+0x1>
     1d4:	a0 93 4d 01 	sts	0x014D, r26	; 0x80014d <_avr_timer_cntcurr+0x2>
     1d8:	b0 93 4e 01 	sts	0x014E, r27	; 0x80014e <_avr_timer_cntcurr+0x3>
     1dc:	bf 91       	pop	r27
     1de:	af 91       	pop	r26
     1e0:	9f 91       	pop	r25
     1e2:	8f 91       	pop	r24
     1e4:	0f 90       	pop	r0
     1e6:	0f be       	out	0x3f, r0	; 63
     1e8:	0f 90       	pop	r0
     1ea:	1f 90       	pop	r1
     1ec:	18 95       	reti

000001ee <set_PWM>:
     1ee:	cf 92       	push	r12
     1f0:	df 92       	push	r13
     1f2:	ef 92       	push	r14
     1f4:	ff 92       	push	r15
     1f6:	6b 01       	movw	r12, r22
     1f8:	7c 01       	movw	r14, r24
     1fa:	20 e0       	ldi	r18, 0x00	; 0
     1fc:	30 e0       	ldi	r19, 0x00	; 0
     1fe:	a9 01       	movw	r20, r18
     200:	0e 94 0d 09 	call	0x121a	; 0x121a <__cmpsf2>
     204:	81 11       	cpse	r24, r1
     206:	06 c0       	rjmp	.+12     	; 0x214 <set_PWM+0x26>
     208:	e1 e9       	ldi	r30, 0x91	; 145
     20a:	f0 e0       	ldi	r31, 0x00	; 0
     20c:	80 81       	ld	r24, Z
     20e:	88 70       	andi	r24, 0x08	; 8
     210:	80 83       	st	Z, r24
     212:	05 c0       	rjmp	.+10     	; 0x21e <set_PWM+0x30>
     214:	e1 e9       	ldi	r30, 0x91	; 145
     216:	f0 e0       	ldi	r31, 0x00	; 0
     218:	80 81       	ld	r24, Z
     21a:	83 60       	ori	r24, 0x03	; 3
     21c:	80 83       	st	Z, r24
     21e:	28 e5       	ldi	r18, 0x58	; 88
     220:	39 e3       	ldi	r19, 0x39	; 57
     222:	44 e7       	ldi	r20, 0x74	; 116
     224:	5f e3       	ldi	r21, 0x3F	; 63
     226:	c7 01       	movw	r24, r14
     228:	b6 01       	movw	r22, r12
     22a:	f7 d7       	rcall	.+4078   	; 0x121a <__cmpsf2>
     22c:	88 23       	and	r24, r24
     22e:	3c f4       	brge	.+14     	; 0x23e <set_PWM+0x50>
     230:	8f ef       	ldi	r24, 0xFF	; 255
     232:	9f ef       	ldi	r25, 0xFF	; 255
     234:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     238:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     23c:	26 c0       	rjmp	.+76     	; 0x28a <set_PWM+0x9c>
     23e:	20 e0       	ldi	r18, 0x00	; 0
     240:	34 e2       	ldi	r19, 0x24	; 36
     242:	44 ef       	ldi	r20, 0xF4	; 244
     244:	56 e4       	ldi	r21, 0x46	; 70
     246:	c7 01       	movw	r24, r14
     248:	b6 01       	movw	r22, r12
     24a:	0e 94 1f 0a 	call	0x143e	; 0x143e <__gesf2>
     24e:	18 16       	cp	r1, r24
     250:	2c f4       	brge	.+10     	; 0x25c <set_PWM+0x6e>
     252:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     256:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     25a:	17 c0       	rjmp	.+46     	; 0x28a <set_PWM+0x9c>
     25c:	20 e0       	ldi	r18, 0x00	; 0
     25e:	30 e0       	ldi	r19, 0x00	; 0
     260:	40 e0       	ldi	r20, 0x00	; 0
     262:	53 e4       	ldi	r21, 0x43	; 67
     264:	c7 01       	movw	r24, r14
     266:	b6 01       	movw	r22, r12
     268:	0e 94 23 0a 	call	0x1446	; 0x1446 <__mulsf3>
     26c:	9b 01       	movw	r18, r22
     26e:	ac 01       	movw	r20, r24
     270:	60 e0       	ldi	r22, 0x00	; 0
     272:	74 e2       	ldi	r23, 0x24	; 36
     274:	84 ef       	ldi	r24, 0xF4	; 244
     276:	9a e4       	ldi	r25, 0x4A	; 74
     278:	d4 d7       	rcall	.+4008   	; 0x1222 <__divsf3>
     27a:	0e 94 79 09 	call	0x12f2	; 0x12f2 <__fixsfsi>
     27e:	61 50       	subi	r22, 0x01	; 1
     280:	71 09       	sbc	r23, r1
     282:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     286:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     28a:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
     28e:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
     292:	ff 90       	pop	r15
     294:	ef 90       	pop	r14
     296:	df 90       	pop	r13
     298:	cf 90       	pop	r12
     29a:	08 95       	ret

0000029c <PWM_on>:
     29c:	80 e4       	ldi	r24, 0x40	; 64
     29e:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     2a2:	8b e0       	ldi	r24, 0x0B	; 11
     2a4:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
     2a8:	60 e0       	ldi	r22, 0x00	; 0
     2aa:	70 e0       	ldi	r23, 0x00	; 0
     2ac:	cb 01       	movw	r24, r22
     2ae:	9f cf       	rjmp	.-194    	; 0x1ee <set_PWM>
     2b0:	08 95       	ret

000002b2 <BLOCKS>:
     2b2:	fc 01       	movw	r30, r24
     2b4:	a2 85       	ldd	r26, Z+10	; 0x0a
     2b6:	b3 85       	ldd	r27, Z+11	; 0x0b
     2b8:	11 96       	adiw	r26, 0x01	; 1
     2ba:	8c 91       	ld	r24, X
     2bc:	81 11       	cpse	r24, r1
     2be:	0f c0       	rjmp	.+30     	; 0x2de <BLOCKS+0x2c>
     2c0:	a4 85       	ldd	r26, Z+12	; 0x0c
     2c2:	b5 85       	ldd	r27, Z+13	; 0x0d
     2c4:	11 96       	adiw	r26, 0x01	; 1
     2c6:	9c 91       	ld	r25, X
     2c8:	91 11       	cpse	r25, r1
     2ca:	0a c0       	rjmp	.+20     	; 0x2e0 <BLOCKS+0x2e>
     2cc:	06 84       	ldd	r0, Z+14	; 0x0e
     2ce:	f7 85       	ldd	r31, Z+15	; 0x0f
     2d0:	e0 2d       	mov	r30, r0
     2d2:	81 e0       	ldi	r24, 0x01	; 1
     2d4:	91 81       	ldd	r25, Z+1	; 0x01
     2d6:	99 23       	and	r25, r25
     2d8:	19 f0       	breq	.+6      	; 0x2e0 <BLOCKS+0x2e>
     2da:	80 e0       	ldi	r24, 0x00	; 0
     2dc:	08 95       	ret
     2de:	80 e0       	ldi	r24, 0x00	; 0
     2e0:	08 95       	ret

000002e2 <OFF>:
     2e2:	fc 01       	movw	r30, r24
     2e4:	a0 81       	ld	r26, Z
     2e6:	b1 81       	ldd	r27, Z+1	; 0x01
     2e8:	8f ef       	ldi	r24, 0xFF	; 255
     2ea:	8c 93       	st	X, r24
     2ec:	a0 81       	ld	r26, Z
     2ee:	b1 81       	ldd	r27, Z+1	; 0x01
     2f0:	11 96       	adiw	r26, 0x01	; 1
     2f2:	1c 92       	st	X, r1
     2f4:	a2 81       	ldd	r26, Z+2	; 0x02
     2f6:	b3 81       	ldd	r27, Z+3	; 0x03
     2f8:	8c 93       	st	X, r24
     2fa:	a2 81       	ldd	r26, Z+2	; 0x02
     2fc:	b3 81       	ldd	r27, Z+3	; 0x03
     2fe:	11 96       	adiw	r26, 0x01	; 1
     300:	1c 92       	st	X, r1
     302:	a4 81       	ldd	r26, Z+4	; 0x04
     304:	b5 81       	ldd	r27, Z+5	; 0x05
     306:	8c 93       	st	X, r24
     308:	a4 81       	ldd	r26, Z+4	; 0x04
     30a:	b5 81       	ldd	r27, Z+5	; 0x05
     30c:	11 96       	adiw	r26, 0x01	; 1
     30e:	1c 92       	st	X, r1
     310:	a6 81       	ldd	r26, Z+6	; 0x06
     312:	b7 81       	ldd	r27, Z+7	; 0x07
     314:	8c 93       	st	X, r24
     316:	a6 81       	ldd	r26, Z+6	; 0x06
     318:	b7 81       	ldd	r27, Z+7	; 0x07
     31a:	11 96       	adiw	r26, 0x01	; 1
     31c:	1c 92       	st	X, r1
     31e:	a0 85       	ldd	r26, Z+8	; 0x08
     320:	b1 85       	ldd	r27, Z+9	; 0x09
     322:	8c 93       	st	X, r24
     324:	a0 85       	ldd	r26, Z+8	; 0x08
     326:	b1 85       	ldd	r27, Z+9	; 0x09
     328:	11 96       	adiw	r26, 0x01	; 1
     32a:	1c 92       	st	X, r1
     32c:	a2 85       	ldd	r26, Z+10	; 0x0a
     32e:	b3 85       	ldd	r27, Z+11	; 0x0b
     330:	8c 93       	st	X, r24
     332:	a2 85       	ldd	r26, Z+10	; 0x0a
     334:	b3 85       	ldd	r27, Z+11	; 0x0b
     336:	11 96       	adiw	r26, 0x01	; 1
     338:	1c 92       	st	X, r1
     33a:	a4 85       	ldd	r26, Z+12	; 0x0c
     33c:	b5 85       	ldd	r27, Z+13	; 0x0d
     33e:	8c 93       	st	X, r24
     340:	a4 85       	ldd	r26, Z+12	; 0x0c
     342:	b5 85       	ldd	r27, Z+13	; 0x0d
     344:	11 96       	adiw	r26, 0x01	; 1
     346:	1c 92       	st	X, r1
     348:	a6 85       	ldd	r26, Z+14	; 0x0e
     34a:	b7 85       	ldd	r27, Z+15	; 0x0f
     34c:	8c 93       	st	X, r24
     34e:	06 84       	ldd	r0, Z+14	; 0x0e
     350:	f7 85       	ldd	r31, Z+15	; 0x0f
     352:	e0 2d       	mov	r30, r0
     354:	11 82       	std	Z+1, r1	; 0x01
     356:	08 95       	ret

00000358 <Row_init>:
     358:	fc 01       	movw	r30, r24
     35a:	a0 81       	ld	r26, Z
     35c:	b1 81       	ldd	r27, Z+1	; 0x01
     35e:	8e ef       	ldi	r24, 0xFE	; 254
     360:	8c 93       	st	X, r24
     362:	a0 81       	ld	r26, Z
     364:	b1 81       	ldd	r27, Z+1	; 0x01
     366:	8c e1       	ldi	r24, 0x1C	; 28
     368:	11 96       	adiw	r26, 0x01	; 1
     36a:	8c 93       	st	X, r24
     36c:	a2 81       	ldd	r26, Z+2	; 0x02
     36e:	b3 81       	ldd	r27, Z+3	; 0x03
     370:	8d ef       	ldi	r24, 0xFD	; 253
     372:	8c 93       	st	X, r24
     374:	a2 81       	ldd	r26, Z+2	; 0x02
     376:	b3 81       	ldd	r27, Z+3	; 0x03
     378:	88 e0       	ldi	r24, 0x08	; 8
     37a:	11 96       	adiw	r26, 0x01	; 1
     37c:	8c 93       	st	X, r24
     37e:	a4 81       	ldd	r26, Z+4	; 0x04
     380:	b5 81       	ldd	r27, Z+5	; 0x05
     382:	8f ef       	ldi	r24, 0xFF	; 255
     384:	8c 93       	st	X, r24
     386:	a4 81       	ldd	r26, Z+4	; 0x04
     388:	b5 81       	ldd	r27, Z+5	; 0x05
     38a:	11 96       	adiw	r26, 0x01	; 1
     38c:	1c 92       	st	X, r1
     38e:	a6 81       	ldd	r26, Z+6	; 0x06
     390:	b7 81       	ldd	r27, Z+7	; 0x07
     392:	8c 93       	st	X, r24
     394:	a6 81       	ldd	r26, Z+6	; 0x06
     396:	b7 81       	ldd	r27, Z+7	; 0x07
     398:	11 96       	adiw	r26, 0x01	; 1
     39a:	1c 92       	st	X, r1
     39c:	a0 85       	ldd	r26, Z+8	; 0x08
     39e:	b1 85       	ldd	r27, Z+9	; 0x09
     3a0:	8c 93       	st	X, r24
     3a2:	a0 85       	ldd	r26, Z+8	; 0x08
     3a4:	b1 85       	ldd	r27, Z+9	; 0x09
     3a6:	11 96       	adiw	r26, 0x01	; 1
     3a8:	1c 92       	st	X, r1
     3aa:	a2 85       	ldd	r26, Z+10	; 0x0a
     3ac:	b3 85       	ldd	r27, Z+11	; 0x0b
     3ae:	9f ed       	ldi	r25, 0xDF	; 223
     3b0:	9c 93       	st	X, r25
     3b2:	a2 85       	ldd	r26, Z+10	; 0x0a
     3b4:	b3 85       	ldd	r27, Z+11	; 0x0b
     3b6:	11 96       	adiw	r26, 0x01	; 1
     3b8:	8c 93       	st	X, r24
     3ba:	a4 85       	ldd	r26, Z+12	; 0x0c
     3bc:	b5 85       	ldd	r27, Z+13	; 0x0d
     3be:	9f eb       	ldi	r25, 0xBF	; 191
     3c0:	9c 93       	st	X, r25
     3c2:	a4 85       	ldd	r26, Z+12	; 0x0c
     3c4:	b5 85       	ldd	r27, Z+13	; 0x0d
     3c6:	11 96       	adiw	r26, 0x01	; 1
     3c8:	8c 93       	st	X, r24
     3ca:	a6 85       	ldd	r26, Z+14	; 0x0e
     3cc:	b7 85       	ldd	r27, Z+15	; 0x0f
     3ce:	9f e7       	ldi	r25, 0x7F	; 127
     3d0:	9c 93       	st	X, r25
     3d2:	06 84       	ldd	r0, Z+14	; 0x0e
     3d4:	f7 85       	ldd	r31, Z+15	; 0x0f
     3d6:	e0 2d       	mov	r30, r0
     3d8:	81 83       	std	Z+1, r24	; 0x01
     3da:	08 95       	ret

000003dc <RESUME>:
     3dc:	cf 93       	push	r28
     3de:	df 93       	push	r29
     3e0:	dc 01       	movw	r26, r24
     3e2:	fb 01       	movw	r30, r22
     3e4:	cd 91       	ld	r28, X+
     3e6:	dc 91       	ld	r29, X
     3e8:	11 97       	sbiw	r26, 0x01	; 1
     3ea:	9e ef       	ldi	r25, 0xFE	; 254
     3ec:	98 83       	st	Y, r25
     3ee:	cd 91       	ld	r28, X+
     3f0:	dc 91       	ld	r29, X
     3f2:	11 97       	sbiw	r26, 0x01	; 1
     3f4:	8c e1       	ldi	r24, 0x1C	; 28
     3f6:	89 83       	std	Y+1, r24	; 0x01
     3f8:	12 96       	adiw	r26, 0x02	; 2
     3fa:	cd 91       	ld	r28, X+
     3fc:	dc 91       	ld	r29, X
     3fe:	13 97       	sbiw	r26, 0x03	; 3
     400:	3d ef       	ldi	r19, 0xFD	; 253
     402:	38 83       	st	Y, r19
     404:	12 96       	adiw	r26, 0x02	; 2
     406:	0d 90       	ld	r0, X+
     408:	bc 91       	ld	r27, X
     40a:	a0 2d       	mov	r26, r0
     40c:	28 e0       	ldi	r18, 0x08	; 8
     40e:	11 96       	adiw	r26, 0x01	; 1
     410:	2c 93       	st	X, r18
     412:	a0 81       	ld	r26, Z
     414:	b1 81       	ldd	r27, Z+1	; 0x01
     416:	3c 93       	st	X, r19
     418:	a0 81       	ld	r26, Z
     41a:	b1 81       	ldd	r27, Z+1	; 0x01
     41c:	11 96       	adiw	r26, 0x01	; 1
     41e:	2c 93       	st	X, r18
     420:	a0 81       	ld	r26, Z
     422:	b1 81       	ldd	r27, Z+1	; 0x01
     424:	21 e0       	ldi	r18, 0x01	; 1
     426:	12 96       	adiw	r26, 0x02	; 2
     428:	2c 93       	st	X, r18
     42a:	a0 81       	ld	r26, Z
     42c:	b1 81       	ldd	r27, Z+1	; 0x01
     42e:	23 e0       	ldi	r18, 0x03	; 3
     430:	13 96       	adiw	r26, 0x03	; 3
     432:	2c 93       	st	X, r18
     434:	01 90       	ld	r0, Z+
     436:	f0 81       	ld	r31, Z
     438:	e0 2d       	mov	r30, r0
     43a:	16 82       	std	Z+6, r1	; 0x06
     43c:	20 93 19 01 	sts	0x0119, r18	; 0x800119 <MIDDLE>
     440:	da 01       	movw	r26, r20
     442:	ed 91       	ld	r30, X+
     444:	fc 91       	ld	r31, X
     446:	11 97       	sbiw	r26, 0x01	; 1
     448:	90 83       	st	Z, r25
     44a:	ed 91       	ld	r30, X+
     44c:	fc 91       	ld	r31, X
     44e:	81 83       	std	Z+1, r24	; 0x01
     450:	df 91       	pop	r29
     452:	cf 91       	pop	r28
     454:	08 95       	ret

00000456 <GameOver>:
     456:	fc 01       	movw	r30, r24
     458:	a0 81       	ld	r26, Z
     45a:	b1 81       	ldd	r27, Z+1	; 0x01
     45c:	81 e8       	ldi	r24, 0x81	; 129
     45e:	8c 93       	st	X, r24
     460:	a0 81       	ld	r26, Z
     462:	b1 81       	ldd	r27, Z+1	; 0x01
     464:	86 e0       	ldi	r24, 0x06	; 6
     466:	11 96       	adiw	r26, 0x01	; 1
     468:	8c 93       	st	X, r24
     46a:	a2 81       	ldd	r26, Z+2	; 0x02
     46c:	b3 81       	ldd	r27, Z+3	; 0x03
     46e:	89 ef       	ldi	r24, 0xF9	; 249
     470:	8c 93       	st	X, r24
     472:	a2 81       	ldd	r26, Z+2	; 0x02
     474:	b3 81       	ldd	r27, Z+3	; 0x03
     476:	88 e3       	ldi	r24, 0x38	; 56
     478:	11 96       	adiw	r26, 0x01	; 1
     47a:	8c 93       	st	X, r24
     47c:	a4 81       	ldd	r26, Z+4	; 0x04
     47e:	b5 81       	ldd	r27, Z+5	; 0x05
     480:	8f ef       	ldi	r24, 0xFF	; 255
     482:	8c 93       	st	X, r24
     484:	a4 81       	ldd	r26, Z+4	; 0x04
     486:	b5 81       	ldd	r27, Z+5	; 0x05
     488:	11 96       	adiw	r26, 0x01	; 1
     48a:	1c 92       	st	X, r1
     48c:	a6 81       	ldd	r26, Z+6	; 0x06
     48e:	b7 81       	ldd	r27, Z+7	; 0x07
     490:	8c 93       	st	X, r24
     492:	a6 81       	ldd	r26, Z+6	; 0x06
     494:	b7 81       	ldd	r27, Z+7	; 0x07
     496:	11 96       	adiw	r26, 0x01	; 1
     498:	1c 92       	st	X, r1
     49a:	a0 85       	ldd	r26, Z+8	; 0x08
     49c:	b1 85       	ldd	r27, Z+9	; 0x09
     49e:	8c 93       	st	X, r24
     4a0:	a0 85       	ldd	r26, Z+8	; 0x08
     4a2:	b1 85       	ldd	r27, Z+9	; 0x09
     4a4:	11 96       	adiw	r26, 0x01	; 1
     4a6:	1c 92       	st	X, r1
     4a8:	a2 85       	ldd	r26, Z+10	; 0x0a
     4aa:	b3 85       	ldd	r27, Z+11	; 0x0b
     4ac:	8c 93       	st	X, r24
     4ae:	a2 85       	ldd	r26, Z+10	; 0x0a
     4b0:	b3 85       	ldd	r27, Z+11	; 0x0b
     4b2:	11 96       	adiw	r26, 0x01	; 1
     4b4:	1c 92       	st	X, r1
     4b6:	a4 85       	ldd	r26, Z+12	; 0x0c
     4b8:	b5 85       	ldd	r27, Z+13	; 0x0d
     4ba:	8c 93       	st	X, r24
     4bc:	a4 85       	ldd	r26, Z+12	; 0x0c
     4be:	b5 85       	ldd	r27, Z+13	; 0x0d
     4c0:	11 96       	adiw	r26, 0x01	; 1
     4c2:	1c 92       	st	X, r1
     4c4:	a6 85       	ldd	r26, Z+14	; 0x0e
     4c6:	b7 85       	ldd	r27, Z+15	; 0x0f
     4c8:	8c 93       	st	X, r24
     4ca:	06 84       	ldd	r0, Z+14	; 0x0e
     4cc:	f7 85       	ldd	r31, Z+15	; 0x0f
     4ce:	e0 2d       	mov	r30, r0
     4d0:	11 82       	std	Z+1, r1	; 0x01
     4d2:	08 95       	ret

000004d4 <GAMEWON>:
     4d4:	fc 01       	movw	r30, r24
     4d6:	a0 81       	ld	r26, Z
     4d8:	b1 81       	ldd	r27, Z+1	; 0x01
     4da:	81 e8       	ldi	r24, 0x81	; 129
     4dc:	8c 93       	st	X, r24
     4de:	a0 81       	ld	r26, Z
     4e0:	b1 81       	ldd	r27, Z+1	; 0x01
     4e2:	93 e0       	ldi	r25, 0x03	; 3
     4e4:	11 96       	adiw	r26, 0x01	; 1
     4e6:	9c 93       	st	X, r25
     4e8:	a2 81       	ldd	r26, Z+2	; 0x02
     4ea:	b3 81       	ldd	r27, Z+3	; 0x03
     4ec:	99 ef       	ldi	r25, 0xF9	; 249
     4ee:	9c 93       	st	X, r25
     4f0:	a2 81       	ldd	r26, Z+2	; 0x02
     4f2:	b3 81       	ldd	r27, Z+3	; 0x03
     4f4:	9c ef       	ldi	r25, 0xFC	; 252
     4f6:	11 96       	adiw	r26, 0x01	; 1
     4f8:	9c 93       	st	X, r25
     4fa:	a4 81       	ldd	r26, Z+4	; 0x04
     4fc:	b5 81       	ldd	r27, Z+5	; 0x05
     4fe:	8c 93       	st	X, r24
     500:	a4 81       	ldd	r26, Z+4	; 0x04
     502:	b5 81       	ldd	r27, Z+5	; 0x05
     504:	90 ec       	ldi	r25, 0xC0	; 192
     506:	11 96       	adiw	r26, 0x01	; 1
     508:	9c 93       	st	X, r25
     50a:	a6 81       	ldd	r26, Z+6	; 0x06
     50c:	b7 81       	ldd	r27, Z+7	; 0x07
     50e:	8c 93       	st	X, r24
     510:	a6 81       	ldd	r26, Z+6	; 0x06
     512:	b7 81       	ldd	r27, Z+7	; 0x07
     514:	88 e1       	ldi	r24, 0x18	; 24
     516:	11 96       	adiw	r26, 0x01	; 1
     518:	8c 93       	st	X, r24
     51a:	a0 85       	ldd	r26, Z+8	; 0x08
     51c:	b1 85       	ldd	r27, Z+9	; 0x09
     51e:	8f ef       	ldi	r24, 0xFF	; 255
     520:	8c 93       	st	X, r24
     522:	a0 85       	ldd	r26, Z+8	; 0x08
     524:	b1 85       	ldd	r27, Z+9	; 0x09
     526:	11 96       	adiw	r26, 0x01	; 1
     528:	1c 92       	st	X, r1
     52a:	a2 85       	ldd	r26, Z+10	; 0x0a
     52c:	b3 85       	ldd	r27, Z+11	; 0x0b
     52e:	8c 93       	st	X, r24
     530:	a2 85       	ldd	r26, Z+10	; 0x0a
     532:	b3 85       	ldd	r27, Z+11	; 0x0b
     534:	11 96       	adiw	r26, 0x01	; 1
     536:	1c 92       	st	X, r1
     538:	a4 85       	ldd	r26, Z+12	; 0x0c
     53a:	b5 85       	ldd	r27, Z+13	; 0x0d
     53c:	8c 93       	st	X, r24
     53e:	a4 85       	ldd	r26, Z+12	; 0x0c
     540:	b5 85       	ldd	r27, Z+13	; 0x0d
     542:	11 96       	adiw	r26, 0x01	; 1
     544:	1c 92       	st	X, r1
     546:	a6 85       	ldd	r26, Z+14	; 0x0e
     548:	b7 85       	ldd	r27, Z+15	; 0x0f
     54a:	8c 93       	st	X, r24
     54c:	06 84       	ldd	r0, Z+14	; 0x0e
     54e:	f7 85       	ldd	r31, Z+15	; 0x0f
     550:	e0 2d       	mov	r30, r0
     552:	11 82       	std	Z+1, r1	; 0x01
     554:	08 95       	ret

00000556 <POSITION>:
     556:	cf 92       	push	r12
     558:	df 92       	push	r13
     55a:	ff 92       	push	r15
     55c:	0f 93       	push	r16
     55e:	1f 93       	push	r17
     560:	cf 93       	push	r28
     562:	df 93       	push	r29
     564:	dc 01       	movw	r26, r24
     566:	ed 91       	ld	r30, X+
     568:	fc 91       	ld	r31, X
     56a:	11 97       	sbiw	r26, 0x01	; 1
     56c:	85 81       	ldd	r24, Z+5	; 0x05
     56e:	93 81       	ldd	r25, Z+3	; 0x03
     570:	28 2f       	mov	r18, r24
     572:	08 2e       	mov	r0, r24
     574:	00 0c       	add	r0, r0
     576:	33 0b       	sbc	r19, r19
     578:	29 0f       	add	r18, r25
     57a:	31 1d       	adc	r19, r1
     57c:	28 30       	cpi	r18, 0x08	; 8
     57e:	31 05       	cpc	r19, r1
     580:	10 f0       	brcs	.+4      	; 0x586 <POSITION+0x30>
     582:	81 95       	neg	r24
     584:	85 83       	std	Z+5, r24	; 0x05
     586:	ed 91       	ld	r30, X+
     588:	fc 91       	ld	r31, X
     58a:	11 97       	sbiw	r26, 0x01	; 1
     58c:	f2 80       	ldd	r15, Z+2	; 0x02
     58e:	94 81       	ldd	r25, Z+4	; 0x04
     590:	29 2f       	mov	r18, r25
     592:	09 2e       	mov	r0, r25
     594:	00 0c       	add	r0, r0
     596:	33 0b       	sbc	r19, r19
     598:	2f 0d       	add	r18, r15
     59a:	31 1d       	adc	r19, r1
     59c:	28 30       	cpi	r18, 0x08	; 8
     59e:	31 05       	cpc	r19, r1
     5a0:	1c f0       	brlt	.+6      	; 0x5a8 <POSITION+0x52>
     5a2:	91 95       	neg	r25
     5a4:	94 83       	std	Z+4, r25	; 0x04
     5a6:	76 c0       	rjmp	.+236    	; 0x694 <POSITION+0x13e>
     5a8:	e9 01       	movw	r28, r18
     5aa:	cc 0f       	add	r28, r28
     5ac:	dd 1f       	adc	r29, r29
     5ae:	c6 0f       	add	r28, r22
     5b0:	d7 1f       	adc	r29, r23
     5b2:	09 90       	ld	r0, Y+
     5b4:	d8 81       	ld	r29, Y
     5b6:	c0 2d       	mov	r28, r0
     5b8:	9f 0d       	add	r25, r15
     5ba:	41 e0       	ldi	r20, 0x01	; 1
     5bc:	50 e0       	ldi	r21, 0x00	; 0
     5be:	02 c0       	rjmp	.+4      	; 0x5c4 <POSITION+0x6e>
     5c0:	44 0f       	add	r20, r20
     5c2:	55 1f       	adc	r21, r21
     5c4:	9a 95       	dec	r25
     5c6:	e2 f7       	brpl	.-8      	; 0x5c0 <POSITION+0x6a>
     5c8:	88 81       	ld	r24, Y
     5ca:	48 23       	and	r20, r24
     5cc:	09 f0       	breq	.+2      	; 0x5d0 <POSITION+0x7a>
     5ce:	5d c0       	rjmp	.+186    	; 0x68a <POSITION+0x134>
     5d0:	53 81       	ldd	r21, Z+3	; 0x03
     5d2:	95 81       	ldd	r25, Z+5	; 0x05
     5d4:	95 0f       	add	r25, r21
     5d6:	01 e0       	ldi	r16, 0x01	; 1
     5d8:	10 e0       	ldi	r17, 0x00	; 0
     5da:	68 01       	movw	r12, r16
     5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <POSITION+0x8c>
     5de:	cc 0c       	add	r12, r12
     5e0:	dd 1c       	adc	r13, r13
     5e2:	9a 95       	dec	r25
     5e4:	e2 f7       	brpl	.-8      	; 0x5de <POSITION+0x88>
     5e6:	c6 01       	movw	r24, r12
     5e8:	49 81       	ldd	r20, Y+1	; 0x01
     5ea:	14 2f       	mov	r17, r20
     5ec:	1c 21       	and	r17, r12
     5ee:	09 f4       	brne	.+2      	; 0x5f2 <POSITION+0x9c>
     5f0:	4c c0       	rjmp	.+152    	; 0x68a <POSITION+0x134>
     5f2:	8d 01       	movw	r16, r26
     5f4:	12 16       	cp	r1, r18
     5f6:	13 06       	cpc	r1, r19
     5f8:	0c f0       	brlt	.+2      	; 0x5fc <POSITION+0xa6>
     5fa:	40 c0       	rjmp	.+128    	; 0x67c <POSITION+0x126>
     5fc:	ef 2d       	mov	r30, r15
     5fe:	f0 e0       	ldi	r31, 0x00	; 0
     600:	ee 0f       	add	r30, r30
     602:	ff 1f       	adc	r31, r31
     604:	e6 0f       	add	r30, r22
     606:	f7 1f       	adc	r31, r23
     608:	01 90       	ld	r0, Z+
     60a:	f0 81       	ld	r31, Z
     60c:	e0 2d       	mov	r30, r0
     60e:	61 81       	ldd	r22, Z+1	; 0x01
     610:	7f ef       	ldi	r23, 0xFF	; 255
     612:	75 0f       	add	r23, r21
     614:	21 e0       	ldi	r18, 0x01	; 1
     616:	30 e0       	ldi	r19, 0x00	; 0
     618:	02 c0       	rjmp	.+4      	; 0x61e <POSITION+0xc8>
     61a:	22 0f       	add	r18, r18
     61c:	33 1f       	adc	r19, r19
     61e:	7a 95       	dec	r23
     620:	e2 f7       	brpl	.-8      	; 0x61a <POSITION+0xc4>
     622:	26 23       	and	r18, r22
     624:	c9 f0       	breq	.+50     	; 0x658 <POSITION+0x102>
     626:	71 e0       	ldi	r23, 0x01	; 1
     628:	75 0f       	add	r23, r21
     62a:	21 e0       	ldi	r18, 0x01	; 1
     62c:	30 e0       	ldi	r19, 0x00	; 0
     62e:	02 c0       	rjmp	.+4      	; 0x634 <POSITION+0xde>
     630:	22 0f       	add	r18, r18
     632:	33 1f       	adc	r19, r19
     634:	7a 95       	dec	r23
     636:	e2 f7       	brpl	.-8      	; 0x630 <POSITION+0xda>
     638:	26 23       	and	r18, r22
     63a:	71 f0       	breq	.+28     	; 0x658 <POSITION+0x102>
     63c:	21 e0       	ldi	r18, 0x01	; 1
     63e:	30 e0       	ldi	r19, 0x00	; 0
     640:	02 c0       	rjmp	.+4      	; 0x646 <POSITION+0xf0>
     642:	22 0f       	add	r18, r18
     644:	33 1f       	adc	r19, r19
     646:	5a 95       	dec	r21
     648:	e2 f7       	brpl	.-8      	; 0x642 <POSITION+0xec>
     64a:	54 2f       	mov	r21, r20
     64c:	52 23       	and	r21, r18
     64e:	21 f0       	breq	.+8      	; 0x658 <POSITION+0x102>
     650:	20 95       	com	r18
     652:	42 23       	and	r20, r18
     654:	49 83       	std	Y+1, r20	; 0x01
     656:	03 c0       	rjmp	.+6      	; 0x65e <POSITION+0x108>
     658:	80 95       	com	r24
     65a:	48 23       	and	r20, r24
     65c:	49 83       	std	Y+1, r20	; 0x01
     65e:	64 ea       	ldi	r22, 0xA4	; 164
     660:	70 ed       	ldi	r23, 0xD0	; 208
     662:	82 e8       	ldi	r24, 0x82	; 130
     664:	93 e4       	ldi	r25, 0x43	; 67
     666:	c3 dd       	rcall	.-1146   	; 0x1ee <set_PWM>
     668:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <BLOCK_NUM>
     66c:	81 50       	subi	r24, 0x01	; 1
     66e:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <BLOCK_NUM>
     672:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <SCORE>
     676:	8f 5f       	subi	r24, 0xFF	; 255
     678:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <SCORE>
     67c:	d8 01       	movw	r26, r16
     67e:	ed 91       	ld	r30, X+
     680:	fc 91       	ld	r31, X
     682:	84 81       	ldd	r24, Z+4	; 0x04
     684:	81 95       	neg	r24
     686:	84 83       	std	Z+4, r24	; 0x04
     688:	05 c0       	rjmp	.+10     	; 0x694 <POSITION+0x13e>
     68a:	12 16       	cp	r1, r18
     68c:	13 06       	cpc	r1, r19
     68e:	14 f0       	brlt	.+4      	; 0x694 <POSITION+0x13e>
     690:	81 e0       	ldi	r24, 0x01	; 1
     692:	86 83       	std	Z+6, r24	; 0x06
     694:	df 91       	pop	r29
     696:	cf 91       	pop	r28
     698:	1f 91       	pop	r17
     69a:	0f 91       	pop	r16
     69c:	ff 90       	pop	r15
     69e:	df 90       	pop	r13
     6a0:	cf 90       	pop	r12
     6a2:	08 95       	ret

000006a4 <PADDLE_SET>:
     6a4:	cf 93       	push	r28
     6a6:	df 93       	push	r29
     6a8:	fc 01       	movw	r30, r24
     6aa:	20 81       	ld	r18, Z
     6ac:	31 81       	ldd	r19, Z+1	; 0x01
     6ae:	db 01       	movw	r26, r22
     6b0:	cd 91       	ld	r28, X+
     6b2:	dc 91       	ld	r29, X
     6b4:	88 81       	ld	r24, Y
     6b6:	d9 01       	movw	r26, r18
     6b8:	8c 93       	st	X, r24
     6ba:	20 81       	ld	r18, Z
     6bc:	31 81       	ldd	r19, Z+1	; 0x01
     6be:	db 01       	movw	r26, r22
     6c0:	cd 91       	ld	r28, X+
     6c2:	dc 91       	ld	r29, X
     6c4:	89 81       	ldd	r24, Y+1	; 0x01
     6c6:	d9 01       	movw	r26, r18
     6c8:	11 96       	adiw	r26, 0x01	; 1
     6ca:	8c 93       	st	X, r24
     6cc:	01 90       	ld	r0, Z+
     6ce:	f0 81       	ld	r31, Z
     6d0:	e0 2d       	mov	r30, r0
     6d2:	83 e0       	ldi	r24, 0x03	; 3
     6d4:	82 83       	std	Z+2, r24	; 0x02
     6d6:	df 91       	pop	r29
     6d8:	cf 91       	pop	r28
     6da:	08 95       	ret

000006dc <SMTick2>:
     6dc:	fc 01       	movw	r30, r24
     6de:	31 96       	adiw	r30, 0x01	; 1
     6e0:	e7 30       	cpi	r30, 0x07	; 7
     6e2:	f1 05       	cpc	r31, r1
     6e4:	18 f4       	brcc	.+6      	; 0x6ec <SMTick2+0x10>
     6e6:	ea 5b       	subi	r30, 0xBA	; 186
     6e8:	ff 4f       	sbci	r31, 0xFF	; 255
     6ea:	3e c7       	rjmp	.+3708   	; 0x1568 <__tablejump2__>
     6ec:	8f ef       	ldi	r24, 0xFF	; 255
     6ee:	9f ef       	ldi	r25, 0xFF	; 255
     6f0:	08 95       	ret
     6f2:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <begin>
     6f6:	81 30       	cpi	r24, 0x01	; 1
     6f8:	11 f5       	brne	.+68     	; 0x73e <SMTick2+0x62>
     6fa:	81 e0       	ldi	r24, 0x01	; 1
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	08 95       	ret
     700:	20 91 4a 01 	lds	r18, 0x014A	; 0x80014a <begin>
     704:	22 23       	and	r18, r18
     706:	d9 f0       	breq	.+54     	; 0x73e <SMTick2+0x62>
     708:	20 91 45 01 	lds	r18, 0x0145	; 0x800145 <Controller_Keys>
     70c:	30 91 46 01 	lds	r19, 0x0146	; 0x800146 <Controller_Keys+0x1>
     710:	30 fd       	sbrc	r19, 0
     712:	31 c0       	rjmp	.+98     	; 0x776 <SMTick2+0x9a>
     714:	31 fd       	sbrc	r19, 1
     716:	1e c0       	rjmp	.+60     	; 0x754 <SMTick2+0x78>
     718:	08 95       	ret
     71a:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <Controller_Keys>
     71e:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <Controller_Keys+0x1>
     722:	90 fd       	sbrc	r25, 0
     724:	28 c0       	rjmp	.+80     	; 0x776 <SMTick2+0x9a>
     726:	83 e0       	ldi	r24, 0x03	; 3
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	08 95       	ret
     72c:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <Controller_Keys>
     730:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <Controller_Keys+0x1>
     734:	91 fd       	sbrc	r25, 1
     736:	0e c0       	rjmp	.+28     	; 0x754 <SMTick2+0x78>
     738:	85 e0       	ldi	r24, 0x05	; 5
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	08 95       	ret
     73e:	64 e0       	ldi	r22, 0x04	; 4
     740:	71 e0       	ldi	r23, 0x01	; 1
     742:	82 e0       	ldi	r24, 0x02	; 2
     744:	91 e0       	ldi	r25, 0x01	; 1
     746:	ae df       	rcall	.-164    	; 0x6a4 <PADDLE_SET>
     748:	83 e0       	ldi	r24, 0x03	; 3
     74a:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <MIDDLE>
     74e:	80 e0       	ldi	r24, 0x00	; 0
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	08 95       	ret
     754:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <PAD1+0x1>
     758:	80 fd       	sbrc	r24, 0
     75a:	1e c0       	rjmp	.+60     	; 0x798 <SMTick2+0xbc>
     75c:	ed e5       	ldi	r30, 0x5D	; 93
     75e:	f1 e0       	ldi	r31, 0x01	; 1
     760:	81 81       	ldd	r24, Z+1	; 0x01
     762:	86 95       	lsr	r24
     764:	81 83       	std	Z+1, r24	; 0x01
     766:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <MIDDLE>
     76a:	81 50       	subi	r24, 0x01	; 1
     76c:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <MIDDLE>
     770:	84 e0       	ldi	r24, 0x04	; 4
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	08 95       	ret
     776:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <PAD1+0x1>
     77a:	88 23       	and	r24, r24
     77c:	84 f0       	brlt	.+32     	; 0x79e <SMTick2+0xc2>
     77e:	ed e5       	ldi	r30, 0x5D	; 93
     780:	f1 e0       	ldi	r31, 0x01	; 1
     782:	81 81       	ldd	r24, Z+1	; 0x01
     784:	88 0f       	add	r24, r24
     786:	81 83       	std	Z+1, r24	; 0x01
     788:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <MIDDLE>
     78c:	8f 5f       	subi	r24, 0xFF	; 255
     78e:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <MIDDLE>
     792:	82 e0       	ldi	r24, 0x02	; 2
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	08 95       	ret
     798:	84 e0       	ldi	r24, 0x04	; 4
     79a:	90 e0       	ldi	r25, 0x00	; 0
     79c:	08 95       	ret
     79e:	82 e0       	ldi	r24, 0x02	; 2
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	08 95       	ret
     7a4:	81 e0       	ldi	r24, 0x01	; 1
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	08 95       	ret

000007aa <BALL_SET>:
     7aa:	cf 93       	push	r28
     7ac:	df 93       	push	r29
     7ae:	fc 01       	movw	r30, r24
     7b0:	20 81       	ld	r18, Z
     7b2:	31 81       	ldd	r19, Z+1	; 0x01
     7b4:	db 01       	movw	r26, r22
     7b6:	12 96       	adiw	r26, 0x02	; 2
     7b8:	cd 91       	ld	r28, X+
     7ba:	dc 91       	ld	r29, X
     7bc:	13 97       	sbiw	r26, 0x03	; 3
     7be:	88 81       	ld	r24, Y
     7c0:	d9 01       	movw	r26, r18
     7c2:	8c 93       	st	X, r24
     7c4:	20 81       	ld	r18, Z
     7c6:	31 81       	ldd	r19, Z+1	; 0x01
     7c8:	db 01       	movw	r26, r22
     7ca:	12 96       	adiw	r26, 0x02	; 2
     7cc:	cd 91       	ld	r28, X+
     7ce:	dc 91       	ld	r29, X
     7d0:	13 97       	sbiw	r26, 0x03	; 3
     7d2:	89 81       	ldd	r24, Y+1	; 0x01
     7d4:	d9 01       	movw	r26, r18
     7d6:	11 96       	adiw	r26, 0x01	; 1
     7d8:	8c 93       	st	X, r24
     7da:	a0 81       	ld	r26, Z
     7dc:	b1 81       	ldd	r27, Z+1	; 0x01
     7de:	81 e0       	ldi	r24, 0x01	; 1
     7e0:	12 96       	adiw	r26, 0x02	; 2
     7e2:	8c 93       	st	X, r24
     7e4:	a0 81       	ld	r26, Z
     7e6:	b1 81       	ldd	r27, Z+1	; 0x01
     7e8:	93 e0       	ldi	r25, 0x03	; 3
     7ea:	13 96       	adiw	r26, 0x03	; 3
     7ec:	9c 93       	st	X, r25
     7ee:	a0 81       	ld	r26, Z
     7f0:	b1 81       	ldd	r27, Z+1	; 0x01
     7f2:	14 96       	adiw	r26, 0x04	; 4
     7f4:	8c 93       	st	X, r24
     7f6:	a0 81       	ld	r26, Z
     7f8:	b1 81       	ldd	r27, Z+1	; 0x01
     7fa:	15 96       	adiw	r26, 0x05	; 5
     7fc:	8c 93       	st	X, r24
     7fe:	01 90       	ld	r0, Z+
     800:	f0 81       	ld	r31, Z
     802:	e0 2d       	mov	r30, r0
     804:	16 82       	std	Z+6, r1	; 0x06
     806:	df 91       	pop	r29
     808:	cf 91       	pop	r28
     80a:	08 95       	ret

0000080c <SMTick3>:
     80c:	01 96       	adiw	r24, 0x01	; 1
     80e:	87 30       	cpi	r24, 0x07	; 7
     810:	91 05       	cpc	r25, r1
     812:	08 f0       	brcs	.+2      	; 0x816 <SMTick3+0xa>
     814:	f0 c0       	rjmp	.+480    	; 0x9f6 <SMTick3+0x1ea>
     816:	83 5b       	subi	r24, 0xB3	; 179
     818:	9f 4f       	sbci	r25, 0xFF	; 255
     81a:	fc 01       	movw	r30, r24
     81c:	a5 c6       	rjmp	.+3402   	; 0x1568 <__tablejump2__>
     81e:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <begin>
     822:	81 30       	cpi	r24, 0x01	; 1
     824:	f9 f4       	brne	.+62     	; 0x864 <SMTick3+0x58>
     826:	29 c0       	rjmp	.+82     	; 0x87a <SMTick3+0x6e>
     828:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <Controller_Keys>
     82c:	87 fd       	sbrc	r24, 7
     82e:	68 c0       	rjmp	.+208    	; 0x900 <SMTick3+0xf4>
     830:	24 c0       	rjmp	.+72     	; 0x87a <SMTick3+0x6e>
     832:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <begin>
     836:	88 23       	and	r24, r24
     838:	a9 f0       	breq	.+42     	; 0x864 <SMTick3+0x58>
     83a:	84 e0       	ldi	r24, 0x04	; 4
     83c:	91 e0       	ldi	r25, 0x01	; 1
     83e:	39 dd       	rcall	.-1422   	; 0x2b2 <BLOCKS>
     840:	81 30       	cpi	r24, 0x01	; 1
     842:	09 f4       	brne	.+2      	; 0x846 <SMTick3+0x3a>
     844:	c3 c0       	rjmp	.+390    	; 0x9cc <SMTick3+0x1c0>
     846:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <ball+0x6>
     84a:	81 30       	cpi	r24, 0x01	; 1
     84c:	09 f0       	breq	.+2      	; 0x850 <SMTick3+0x44>
     84e:	58 c0       	rjmp	.+176    	; 0x900 <SMTick3+0xf4>
     850:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <LIVES>
     854:	81 11       	cpse	r24, r1
     856:	c0 c0       	rjmp	.+384    	; 0x9d8 <SMTick3+0x1cc>
     858:	81 e0       	ldi	r24, 0x01	; 1
     85a:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <LOST>
     85e:	83 e0       	ldi	r24, 0x03	; 3
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	08 95       	ret
     864:	83 e0       	ldi	r24, 0x03	; 3
     866:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <MIDDLE>
     86a:	64 e0       	ldi	r22, 0x04	; 4
     86c:	71 e0       	ldi	r23, 0x01	; 1
     86e:	80 e0       	ldi	r24, 0x00	; 0
     870:	91 e0       	ldi	r25, 0x01	; 1
     872:	9b df       	rcall	.-202    	; 0x7aa <BALL_SET>
     874:	80 e0       	ldi	r24, 0x00	; 0
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	08 95       	ret
     87a:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <Controller_Keys>
     87e:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <Controller_Keys+0x1>
     882:	88 27       	eor	r24, r24
     884:	93 70       	andi	r25, 0x03	; 3
     886:	89 2b       	or	r24, r25
     888:	09 f4       	brne	.+2      	; 0x88c <SMTick3+0x80>
     88a:	b8 c0       	rjmp	.+368    	; 0x9fc <SMTick3+0x1f0>
     88c:	a1 e6       	ldi	r26, 0x61	; 97
     88e:	b1 e0       	ldi	r27, 0x01	; 1
     890:	12 96       	adiw	r26, 0x02	; 2
     892:	ec 91       	ld	r30, X
     894:	12 97       	sbiw	r26, 0x02	; 2
     896:	f0 e0       	ldi	r31, 0x00	; 0
     898:	ee 0f       	add	r30, r30
     89a:	ff 1f       	adc	r31, r31
     89c:	ec 5f       	subi	r30, 0xFC	; 252
     89e:	fe 4f       	sbci	r31, 0xFE	; 254
     8a0:	01 90       	ld	r0, Z+
     8a2:	f0 81       	ld	r31, Z
     8a4:	e0 2d       	mov	r30, r0
     8a6:	81 e0       	ldi	r24, 0x01	; 1
     8a8:	90 e0       	ldi	r25, 0x00	; 0
     8aa:	9c 01       	movw	r18, r24
     8ac:	13 96       	adiw	r26, 0x03	; 3
     8ae:	0c 90       	ld	r0, X
     8b0:	13 97       	sbiw	r26, 0x03	; 3
     8b2:	02 c0       	rjmp	.+4      	; 0x8b8 <SMTick3+0xac>
     8b4:	22 0f       	add	r18, r18
     8b6:	33 1f       	adc	r19, r19
     8b8:	0a 94       	dec	r0
     8ba:	e2 f7       	brpl	.-8      	; 0x8b4 <SMTick3+0xa8>
     8bc:	20 95       	com	r18
     8be:	31 81       	ldd	r19, Z+1	; 0x01
     8c0:	23 23       	and	r18, r19
     8c2:	21 83       	std	Z+1, r18	; 0x01
     8c4:	20 91 19 01 	lds	r18, 0x0119	; 0x800119 <MIDDLE>
     8c8:	13 96       	adiw	r26, 0x03	; 3
     8ca:	2c 93       	st	X, r18
     8cc:	13 97       	sbiw	r26, 0x03	; 3
     8ce:	12 96       	adiw	r26, 0x02	; 2
     8d0:	ec 91       	ld	r30, X
     8d2:	12 97       	sbiw	r26, 0x02	; 2
     8d4:	f0 e0       	ldi	r31, 0x00	; 0
     8d6:	ee 0f       	add	r30, r30
     8d8:	ff 1f       	adc	r31, r31
     8da:	ec 5f       	subi	r30, 0xFC	; 252
     8dc:	fe 4f       	sbci	r31, 0xFE	; 254
     8de:	01 90       	ld	r0, Z+
     8e0:	f0 81       	ld	r31, Z
     8e2:	e0 2d       	mov	r30, r0
     8e4:	02 c0       	rjmp	.+4      	; 0x8ea <SMTick3+0xde>
     8e6:	88 0f       	add	r24, r24
     8e8:	99 1f       	adc	r25, r25
     8ea:	2a 95       	dec	r18
     8ec:	e2 f7       	brpl	.-8      	; 0x8e6 <SMTick3+0xda>
     8ee:	91 81       	ldd	r25, Z+1	; 0x01
     8f0:	89 2b       	or	r24, r25
     8f2:	81 83       	std	Z+1, r24	; 0x01
     8f4:	81 e0       	ldi	r24, 0x01	; 1
     8f6:	14 96       	adiw	r26, 0x04	; 4
     8f8:	8c 93       	st	X, r24
     8fa:	81 e0       	ldi	r24, 0x01	; 1
     8fc:	90 e0       	ldi	r25, 0x00	; 0
     8fe:	08 95       	ret
     900:	64 e0       	ldi	r22, 0x04	; 4
     902:	71 e0       	ldi	r23, 0x01	; 1
     904:	80 e0       	ldi	r24, 0x00	; 0
     906:	91 e0       	ldi	r25, 0x01	; 1
     908:	26 de       	rcall	.-948    	; 0x556 <POSITION>
     90a:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <ball+0x6>
     90e:	81 11       	cpse	r24, r1
     910:	78 c0       	rjmp	.+240    	; 0xa02 <SMTick3+0x1f6>
     912:	e1 e6       	ldi	r30, 0x61	; 97
     914:	f1 e0       	ldi	r31, 0x01	; 1
     916:	a2 81       	ldd	r26, Z+2	; 0x02
     918:	b0 e0       	ldi	r27, 0x00	; 0
     91a:	aa 0f       	add	r26, r26
     91c:	bb 1f       	adc	r27, r27
     91e:	ac 5f       	subi	r26, 0xFC	; 252
     920:	be 4f       	sbci	r27, 0xFE	; 254
     922:	0d 90       	ld	r0, X+
     924:	bc 91       	ld	r27, X
     926:	a0 2d       	mov	r26, r0
     928:	81 e0       	ldi	r24, 0x01	; 1
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	9c 01       	movw	r18, r24
     92e:	03 80       	ldd	r0, Z+3	; 0x03
     930:	02 c0       	rjmp	.+4      	; 0x936 <SMTick3+0x12a>
     932:	22 0f       	add	r18, r18
     934:	33 1f       	adc	r19, r19
     936:	0a 94       	dec	r0
     938:	e2 f7       	brpl	.-8      	; 0x932 <SMTick3+0x126>
     93a:	20 95       	com	r18
     93c:	11 96       	adiw	r26, 0x01	; 1
     93e:	3c 91       	ld	r19, X
     940:	11 97       	sbiw	r26, 0x01	; 1
     942:	23 23       	and	r18, r19
     944:	11 96       	adiw	r26, 0x01	; 1
     946:	2c 93       	st	X, r18
     948:	22 81       	ldd	r18, Z+2	; 0x02
     94a:	34 81       	ldd	r19, Z+4	; 0x04
     94c:	a3 2f       	mov	r26, r19
     94e:	03 2e       	mov	r0, r19
     950:	00 0c       	add	r0, r0
     952:	bb 0b       	sbc	r27, r27
     954:	a2 0f       	add	r26, r18
     956:	b1 1d       	adc	r27, r1
     958:	aa 0f       	add	r26, r26
     95a:	bb 1f       	adc	r27, r27
     95c:	ac 5f       	subi	r26, 0xFC	; 252
     95e:	be 4f       	sbci	r27, 0xFE	; 254
     960:	0d 90       	ld	r0, X+
     962:	bc 91       	ld	r27, X
     964:	a0 2d       	mov	r26, r0
     966:	23 0f       	add	r18, r19
     968:	ac 01       	movw	r20, r24
     96a:	02 c0       	rjmp	.+4      	; 0x970 <SMTick3+0x164>
     96c:	44 0f       	add	r20, r20
     96e:	55 1f       	adc	r21, r21
     970:	2a 95       	dec	r18
     972:	e2 f7       	brpl	.-8      	; 0x96c <SMTick3+0x160>
     974:	9a 01       	movw	r18, r20
     976:	20 95       	com	r18
     978:	3c 91       	ld	r19, X
     97a:	23 23       	and	r18, r19
     97c:	2c 93       	st	X, r18
     97e:	22 81       	ldd	r18, Z+2	; 0x02
     980:	a4 81       	ldd	r26, Z+4	; 0x04
     982:	0a 2e       	mov	r0, r26
     984:	00 0c       	add	r0, r0
     986:	bb 0b       	sbc	r27, r27
     988:	a2 0f       	add	r26, r18
     98a:	b1 1d       	adc	r27, r1
     98c:	aa 0f       	add	r26, r26
     98e:	bb 1f       	adc	r27, r27
     990:	ac 5f       	subi	r26, 0xFC	; 252
     992:	be 4f       	sbci	r27, 0xFE	; 254
     994:	0d 90       	ld	r0, X+
     996:	bc 91       	ld	r27, X
     998:	a0 2d       	mov	r26, r0
     99a:	33 81       	ldd	r19, Z+3	; 0x03
     99c:	25 81       	ldd	r18, Z+5	; 0x05
     99e:	23 0f       	add	r18, r19
     9a0:	02 c0       	rjmp	.+4      	; 0x9a6 <SMTick3+0x19a>
     9a2:	88 0f       	add	r24, r24
     9a4:	99 1f       	adc	r25, r25
     9a6:	2a 95       	dec	r18
     9a8:	e2 f7       	brpl	.-8      	; 0x9a2 <SMTick3+0x196>
     9aa:	11 96       	adiw	r26, 0x01	; 1
     9ac:	9c 91       	ld	r25, X
     9ae:	11 97       	sbiw	r26, 0x01	; 1
     9b0:	89 2b       	or	r24, r25
     9b2:	11 96       	adiw	r26, 0x01	; 1
     9b4:	8c 93       	st	X, r24
     9b6:	92 81       	ldd	r25, Z+2	; 0x02
     9b8:	84 81       	ldd	r24, Z+4	; 0x04
     9ba:	89 0f       	add	r24, r25
     9bc:	82 83       	std	Z+2, r24	; 0x02
     9be:	93 81       	ldd	r25, Z+3	; 0x03
     9c0:	85 81       	ldd	r24, Z+5	; 0x05
     9c2:	89 0f       	add	r24, r25
     9c4:	83 83       	std	Z+3, r24	; 0x03
     9c6:	82 e0       	ldi	r24, 0x02	; 2
     9c8:	90 e0       	ldi	r25, 0x00	; 0
     9ca:	08 95       	ret
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <WIN>
     9d2:	84 e0       	ldi	r24, 0x04	; 4
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	08 95       	ret
     9d8:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <LIVES>
     9dc:	81 50       	subi	r24, 0x01	; 1
     9de:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <LIVES>
     9e2:	42 e0       	ldi	r20, 0x02	; 2
     9e4:	51 e0       	ldi	r21, 0x01	; 1
     9e6:	60 e0       	ldi	r22, 0x00	; 0
     9e8:	71 e0       	ldi	r23, 0x01	; 1
     9ea:	84 e0       	ldi	r24, 0x04	; 4
     9ec:	91 e0       	ldi	r25, 0x01	; 1
     9ee:	f6 dc       	rcall	.-1556   	; 0x3dc <RESUME>
     9f0:	85 e0       	ldi	r24, 0x05	; 5
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	08 95       	ret
     9f6:	8f ef       	ldi	r24, 0xFF	; 255
     9f8:	9f ef       	ldi	r25, 0xFF	; 255
     9fa:	08 95       	ret
     9fc:	81 e0       	ldi	r24, 0x01	; 1
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	08 95       	ret
     a02:	82 e0       	ldi	r24, 0x02	; 2
     a04:	90 e0       	ldi	r25, 0x00	; 0
     a06:	08 95       	ret

00000a08 <transmit_data>:
     a08:	20 e0       	ldi	r18, 0x00	; 0
     a0a:	30 e0       	ldi	r19, 0x00	; 0
     a0c:	58 e0       	ldi	r21, 0x08	; 8
     a0e:	a8 2f       	mov	r26, r24
     a10:	b0 e0       	ldi	r27, 0x00	; 0
     a12:	61 30       	cpi	r22, 0x01	; 1
     a14:	79 f4       	brne	.+30     	; 0xa34 <transmit_data+0x2c>
     a16:	52 b9       	out	0x02, r21	; 2
     a18:	42 b1       	in	r20, 0x02	; 2
     a1a:	fd 01       	movw	r30, r26
     a1c:	02 2e       	mov	r0, r18
     a1e:	02 c0       	rjmp	.+4      	; 0xa24 <transmit_data+0x1c>
     a20:	f5 95       	asr	r31
     a22:	e7 95       	ror	r30
     a24:	0a 94       	dec	r0
     a26:	e2 f7       	brpl	.-8      	; 0xa20 <transmit_data+0x18>
     a28:	9e 2f       	mov	r25, r30
     a2a:	91 70       	andi	r25, 0x01	; 1
     a2c:	94 2b       	or	r25, r20
     a2e:	92 b9       	out	0x02, r25	; 2
     a30:	11 9a       	sbi	0x02, 1	; 2
     a32:	32 c0       	rjmp	.+100    	; 0xa98 <transmit_data+0x90>
     a34:	62 30       	cpi	r22, 0x02	; 2
     a36:	79 f4       	brne	.+30     	; 0xa56 <transmit_data+0x4e>
     a38:	55 b9       	out	0x05, r21	; 5
     a3a:	95 b1       	in	r25, 0x05	; 5
     a3c:	fd 01       	movw	r30, r26
     a3e:	02 2e       	mov	r0, r18
     a40:	02 c0       	rjmp	.+4      	; 0xa46 <transmit_data+0x3e>
     a42:	f5 95       	asr	r31
     a44:	e7 95       	ror	r30
     a46:	0a 94       	dec	r0
     a48:	e2 f7       	brpl	.-8      	; 0xa42 <transmit_data+0x3a>
     a4a:	8e 2f       	mov	r24, r30
     a4c:	81 70       	andi	r24, 0x01	; 1
     a4e:	89 2b       	or	r24, r25
     a50:	85 b9       	out	0x05, r24	; 5
     a52:	29 9a       	sbi	0x05, 1	; 5
     a54:	21 c0       	rjmp	.+66     	; 0xa98 <transmit_data+0x90>
     a56:	63 30       	cpi	r22, 0x03	; 3
     a58:	79 f4       	brne	.+30     	; 0xa78 <transmit_data+0x70>
     a5a:	58 b9       	out	0x08, r21	; 8
     a5c:	98 b1       	in	r25, 0x08	; 8
     a5e:	fd 01       	movw	r30, r26
     a60:	02 2e       	mov	r0, r18
     a62:	02 c0       	rjmp	.+4      	; 0xa68 <transmit_data+0x60>
     a64:	f5 95       	asr	r31
     a66:	e7 95       	ror	r30
     a68:	0a 94       	dec	r0
     a6a:	e2 f7       	brpl	.-8      	; 0xa64 <transmit_data+0x5c>
     a6c:	8e 2f       	mov	r24, r30
     a6e:	81 70       	andi	r24, 0x01	; 1
     a70:	89 2b       	or	r24, r25
     a72:	88 b9       	out	0x08, r24	; 8
     a74:	41 9a       	sbi	0x08, 1	; 8
     a76:	10 c0       	rjmp	.+32     	; 0xa98 <transmit_data+0x90>
     a78:	64 30       	cpi	r22, 0x04	; 4
     a7a:	71 f4       	brne	.+28     	; 0xa98 <transmit_data+0x90>
     a7c:	5b b9       	out	0x0b, r21	; 11
     a7e:	9b b1       	in	r25, 0x0b	; 11
     a80:	fd 01       	movw	r30, r26
     a82:	02 2e       	mov	r0, r18
     a84:	02 c0       	rjmp	.+4      	; 0xa8a <transmit_data+0x82>
     a86:	f5 95       	asr	r31
     a88:	e7 95       	ror	r30
     a8a:	0a 94       	dec	r0
     a8c:	e2 f7       	brpl	.-8      	; 0xa86 <transmit_data+0x7e>
     a8e:	8e 2f       	mov	r24, r30
     a90:	81 70       	andi	r24, 0x01	; 1
     a92:	89 2b       	or	r24, r25
     a94:	8b b9       	out	0x0b, r24	; 11
     a96:	59 9a       	sbi	0x0b, 1	; 11
     a98:	2f 5f       	subi	r18, 0xFF	; 255
     a9a:	3f 4f       	sbci	r19, 0xFF	; 255
     a9c:	28 30       	cpi	r18, 0x08	; 8
     a9e:	31 05       	cpc	r19, r1
     aa0:	09 f0       	breq	.+2      	; 0xaa4 <transmit_data+0x9c>
     aa2:	b7 cf       	rjmp	.-146    	; 0xa12 <transmit_data+0xa>
     aa4:	61 30       	cpi	r22, 0x01	; 1
     aa6:	19 f4       	brne	.+6      	; 0xaae <transmit_data+0xa6>
     aa8:	12 9a       	sbi	0x02, 2	; 2
     aaa:	12 b8       	out	0x02, r1	; 2
     aac:	08 95       	ret
     aae:	62 30       	cpi	r22, 0x02	; 2
     ab0:	19 f4       	brne	.+6      	; 0xab8 <transmit_data+0xb0>
     ab2:	2a 9a       	sbi	0x05, 2	; 5
     ab4:	15 b8       	out	0x05, r1	; 5
     ab6:	08 95       	ret
     ab8:	63 30       	cpi	r22, 0x03	; 3
     aba:	19 f4       	brne	.+6      	; 0xac2 <transmit_data+0xba>
     abc:	42 9a       	sbi	0x08, 2	; 8
     abe:	18 b8       	out	0x08, r1	; 8
     ac0:	08 95       	ret
     ac2:	64 30       	cpi	r22, 0x04	; 4
     ac4:	11 f4       	brne	.+4      	; 0xaca <transmit_data+0xc2>
     ac6:	5a 9a       	sbi	0x0b, 2	; 11
     ac8:	1b b8       	out	0x0b, r1	; 11
     aca:	08 95       	ret

00000acc <transmit_dataA1>:
     acc:	20 e0       	ldi	r18, 0x00	; 0
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	58 e0       	ldi	r21, 0x08	; 8
     ad2:	e8 2f       	mov	r30, r24
     ad4:	f0 e0       	ldi	r31, 0x00	; 0
     ad6:	52 b9       	out	0x02, r21	; 2
     ad8:	42 b1       	in	r20, 0x02	; 2
     ada:	bf 01       	movw	r22, r30
     adc:	02 2e       	mov	r0, r18
     ade:	02 c0       	rjmp	.+4      	; 0xae4 <transmit_dataA1+0x18>
     ae0:	75 95       	asr	r23
     ae2:	67 95       	ror	r22
     ae4:	0a 94       	dec	r0
     ae6:	e2 f7       	brpl	.-8      	; 0xae0 <transmit_dataA1+0x14>
     ae8:	96 2f       	mov	r25, r22
     aea:	91 70       	andi	r25, 0x01	; 1
     aec:	94 2b       	or	r25, r20
     aee:	92 b9       	out	0x02, r25	; 2
     af0:	11 9a       	sbi	0x02, 1	; 2
     af2:	2f 5f       	subi	r18, 0xFF	; 255
     af4:	3f 4f       	sbci	r19, 0xFF	; 255
     af6:	28 30       	cpi	r18, 0x08	; 8
     af8:	31 05       	cpc	r19, r1
     afa:	69 f7       	brne	.-38     	; 0xad6 <transmit_dataA1+0xa>
     afc:	12 9a       	sbi	0x02, 2	; 2
     afe:	12 b8       	out	0x02, r1	; 2
     b00:	08 95       	ret

00000b02 <transmit_dataA2>:
     b02:	40 e0       	ldi	r20, 0x00	; 0
     b04:	50 e0       	ldi	r21, 0x00	; 0
     b06:	e0 e8       	ldi	r30, 0x80	; 128
     b08:	68 2f       	mov	r22, r24
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	e2 b9       	out	0x02, r30	; 2
     b0e:	92 b1       	in	r25, 0x02	; 2
     b10:	9b 01       	movw	r18, r22
     b12:	04 2e       	mov	r0, r20
     b14:	02 c0       	rjmp	.+4      	; 0xb1a <transmit_dataA2+0x18>
     b16:	35 95       	asr	r19
     b18:	27 95       	ror	r18
     b1a:	0a 94       	dec	r0
     b1c:	e2 f7       	brpl	.-8      	; 0xb16 <transmit_dataA2+0x14>
     b1e:	21 70       	andi	r18, 0x01	; 1
     b20:	33 27       	eor	r19, r19
     b22:	22 95       	swap	r18
     b24:	32 95       	swap	r19
     b26:	30 7f       	andi	r19, 0xF0	; 240
     b28:	32 27       	eor	r19, r18
     b2a:	20 7f       	andi	r18, 0xF0	; 240
     b2c:	32 27       	eor	r19, r18
     b2e:	29 2b       	or	r18, r25
     b30:	22 b9       	out	0x02, r18	; 2
     b32:	15 9a       	sbi	0x02, 5	; 2
     b34:	4f 5f       	subi	r20, 0xFF	; 255
     b36:	5f 4f       	sbci	r21, 0xFF	; 255
     b38:	48 30       	cpi	r20, 0x08	; 8
     b3a:	51 05       	cpc	r21, r1
     b3c:	39 f7       	brne	.-50     	; 0xb0c <transmit_dataA2+0xa>
     b3e:	16 9a       	sbi	0x02, 6	; 2
     b40:	12 b8       	out	0x02, r1	; 2
     b42:	08 95       	ret

00000b44 <transmit_dataD1>:
     b44:	20 e0       	ldi	r18, 0x00	; 0
     b46:	30 e0       	ldi	r19, 0x00	; 0
     b48:	58 e0       	ldi	r21, 0x08	; 8
     b4a:	e8 2f       	mov	r30, r24
     b4c:	f0 e0       	ldi	r31, 0x00	; 0
     b4e:	5b b9       	out	0x0b, r21	; 11
     b50:	4b b1       	in	r20, 0x0b	; 11
     b52:	bf 01       	movw	r22, r30
     b54:	02 2e       	mov	r0, r18
     b56:	02 c0       	rjmp	.+4      	; 0xb5c <transmit_dataD1+0x18>
     b58:	75 95       	asr	r23
     b5a:	67 95       	ror	r22
     b5c:	0a 94       	dec	r0
     b5e:	e2 f7       	brpl	.-8      	; 0xb58 <transmit_dataD1+0x14>
     b60:	96 2f       	mov	r25, r22
     b62:	91 70       	andi	r25, 0x01	; 1
     b64:	94 2b       	or	r25, r20
     b66:	9b b9       	out	0x0b, r25	; 11
     b68:	59 9a       	sbi	0x0b, 1	; 11
     b6a:	2f 5f       	subi	r18, 0xFF	; 255
     b6c:	3f 4f       	sbci	r19, 0xFF	; 255
     b6e:	28 30       	cpi	r18, 0x08	; 8
     b70:	31 05       	cpc	r19, r1
     b72:	69 f7       	brne	.-38     	; 0xb4e <transmit_dataD1+0xa>
     b74:	5a 9a       	sbi	0x0b, 2	; 11
     b76:	1b b8       	out	0x0b, r1	; 11
     b78:	08 95       	ret

00000b7a <Write7Seg>:
     b7a:	88 23       	and	r24, r24
     b7c:	a1 f0       	breq	.+40     	; 0xba6 <Write7Seg+0x2c>
     b7e:	81 30       	cpi	r24, 0x01	; 1
     b80:	a1 f0       	breq	.+40     	; 0xbaa <Write7Seg+0x30>
     b82:	82 30       	cpi	r24, 0x02	; 2
     b84:	a1 f0       	breq	.+40     	; 0xbae <Write7Seg+0x34>
     b86:	83 30       	cpi	r24, 0x03	; 3
     b88:	a1 f0       	breq	.+40     	; 0xbb2 <Write7Seg+0x38>
     b8a:	84 30       	cpi	r24, 0x04	; 4
     b8c:	a1 f0       	breq	.+40     	; 0xbb6 <Write7Seg+0x3c>
     b8e:	85 30       	cpi	r24, 0x05	; 5
     b90:	a1 f0       	breq	.+40     	; 0xbba <Write7Seg+0x40>
     b92:	86 30       	cpi	r24, 0x06	; 6
     b94:	a1 f0       	breq	.+40     	; 0xbbe <Write7Seg+0x44>
     b96:	87 30       	cpi	r24, 0x07	; 7
     b98:	a1 f0       	breq	.+40     	; 0xbc2 <Write7Seg+0x48>
     b9a:	88 30       	cpi	r24, 0x08	; 8
     b9c:	a1 f0       	breq	.+40     	; 0xbc6 <Write7Seg+0x4c>
     b9e:	89 30       	cpi	r24, 0x09	; 9
     ba0:	a1 f4       	brne	.+40     	; 0xbca <Write7Seg+0x50>
     ba2:	87 ef       	ldi	r24, 0xF7	; 247
     ba4:	08 95       	ret
     ba6:	8e e7       	ldi	r24, 0x7E	; 126
     ba8:	08 95       	ret
     baa:	88 e4       	ldi	r24, 0x48	; 72
     bac:	08 95       	ret
     bae:	8d eb       	ldi	r24, 0xBD	; 189
     bb0:	08 95       	ret
     bb2:	8d ee       	ldi	r24, 0xED	; 237
     bb4:	08 95       	ret
     bb6:	83 ed       	ldi	r24, 0xD3	; 211
     bb8:	08 95       	ret
     bba:	87 ee       	ldi	r24, 0xE7	; 231
     bbc:	08 95       	ret
     bbe:	8f ee       	ldi	r24, 0xEF	; 239
     bc0:	08 95       	ret
     bc2:	82 e3       	ldi	r24, 0x32	; 50
     bc4:	08 95       	ret
     bc6:	8f ef       	ldi	r24, 0xFF	; 255
     bc8:	08 95       	ret
     bca:	80 e0       	ldi	r24, 0x00	; 0
     bcc:	08 95       	ret

00000bce <SMTick1>:
     bce:	cf 93       	push	r28
     bd0:	df 93       	push	r29
     bd2:	ec 01       	movw	r28, r24
     bd4:	64 e0       	ldi	r22, 0x04	; 4
     bd6:	71 e0       	ldi	r23, 0x01	; 1
     bd8:	82 e0       	ldi	r24, 0x02	; 2
     bda:	91 e0       	ldi	r25, 0x01	; 1
     bdc:	63 dd       	rcall	.-1338   	; 0x6a4 <PADDLE_SET>
     bde:	fe 01       	movw	r30, r28
     be0:	31 96       	adiw	r30, 0x01	; 1
     be2:	ea 30       	cpi	r30, 0x0A	; 10
     be4:	f1 05       	cpc	r31, r1
     be6:	08 f0       	brcs	.+2      	; 0xbea <SMTick1+0x1c>
     be8:	9b c0       	rjmp	.+310    	; 0xd20 <SMTick1+0x152>
     bea:	ec 5a       	subi	r30, 0xAC	; 172
     bec:	ff 4f       	sbci	r31, 0xFF	; 255
     bee:	bc c4       	rjmp	.+2424   	; 0x1568 <__tablejump2__>
     bf0:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <begin>
     bf4:	81 30       	cpi	r24, 0x01	; 1
     bf6:	09 f0       	breq	.+2      	; 0xbfa <SMTick1+0x2c>
     bf8:	95 c0       	rjmp	.+298    	; 0xd24 <SMTick1+0x156>
     bfa:	c4 e0       	ldi	r28, 0x04	; 4
     bfc:	d1 e0       	ldi	r29, 0x01	; 1
     bfe:	e8 81       	ld	r30, Y
     c00:	f9 81       	ldd	r31, Y+1	; 0x01
     c02:	81 81       	ldd	r24, Z+1	; 0x01
     c04:	63 df       	rcall	.-314    	; 0xacc <transmit_dataA1>
     c06:	e8 81       	ld	r30, Y
     c08:	f9 81       	ldd	r31, Y+1	; 0x01
     c0a:	62 e0       	ldi	r22, 0x02	; 2
     c0c:	80 81       	ld	r24, Z
     c0e:	fc de       	rcall	.-520    	; 0xa08 <transmit_data>
     c10:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <LIVES>
     c14:	b2 df       	rcall	.-156    	; 0xb7a <Write7Seg>
     c16:	75 df       	rcall	.-278    	; 0xb02 <transmit_dataA2>
     c18:	c1 e0       	ldi	r28, 0x01	; 1
     c1a:	d0 e0       	ldi	r29, 0x00	; 0
     c1c:	83 c0       	rjmp	.+262    	; 0xd24 <SMTick1+0x156>
     c1e:	c4 e0       	ldi	r28, 0x04	; 4
     c20:	d1 e0       	ldi	r29, 0x01	; 1
     c22:	ea 81       	ldd	r30, Y+2	; 0x02
     c24:	fb 81       	ldd	r31, Y+3	; 0x03
     c26:	81 81       	ldd	r24, Z+1	; 0x01
     c28:	51 df       	rcall	.-350    	; 0xacc <transmit_dataA1>
     c2a:	ea 81       	ldd	r30, Y+2	; 0x02
     c2c:	fb 81       	ldd	r31, Y+3	; 0x03
     c2e:	62 e0       	ldi	r22, 0x02	; 2
     c30:	80 81       	ld	r24, Z
     c32:	ea de       	rcall	.-556    	; 0xa08 <transmit_data>
     c34:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <LIVES>
     c38:	a0 df       	rcall	.-192    	; 0xb7a <Write7Seg>
     c3a:	63 df       	rcall	.-314    	; 0xb02 <transmit_dataA2>
     c3c:	c2 e0       	ldi	r28, 0x02	; 2
     c3e:	d0 e0       	ldi	r29, 0x00	; 0
     c40:	71 c0       	rjmp	.+226    	; 0xd24 <SMTick1+0x156>
     c42:	c4 e0       	ldi	r28, 0x04	; 4
     c44:	d1 e0       	ldi	r29, 0x01	; 1
     c46:	ec 81       	ldd	r30, Y+4	; 0x04
     c48:	fd 81       	ldd	r31, Y+5	; 0x05
     c4a:	81 81       	ldd	r24, Z+1	; 0x01
     c4c:	3f df       	rcall	.-386    	; 0xacc <transmit_dataA1>
     c4e:	ec 81       	ldd	r30, Y+4	; 0x04
     c50:	fd 81       	ldd	r31, Y+5	; 0x05
     c52:	62 e0       	ldi	r22, 0x02	; 2
     c54:	80 81       	ld	r24, Z
     c56:	d8 de       	rcall	.-592    	; 0xa08 <transmit_data>
     c58:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <LIVES>
     c5c:	8e df       	rcall	.-228    	; 0xb7a <Write7Seg>
     c5e:	51 df       	rcall	.-350    	; 0xb02 <transmit_dataA2>
     c60:	c3 e0       	ldi	r28, 0x03	; 3
     c62:	d0 e0       	ldi	r29, 0x00	; 0
     c64:	5f c0       	rjmp	.+190    	; 0xd24 <SMTick1+0x156>
     c66:	c4 e0       	ldi	r28, 0x04	; 4
     c68:	d1 e0       	ldi	r29, 0x01	; 1
     c6a:	ee 81       	ldd	r30, Y+6	; 0x06
     c6c:	ff 81       	ldd	r31, Y+7	; 0x07
     c6e:	81 81       	ldd	r24, Z+1	; 0x01
     c70:	2d df       	rcall	.-422    	; 0xacc <transmit_dataA1>
     c72:	ee 81       	ldd	r30, Y+6	; 0x06
     c74:	ff 81       	ldd	r31, Y+7	; 0x07
     c76:	62 e0       	ldi	r22, 0x02	; 2
     c78:	80 81       	ld	r24, Z
     c7a:	c6 de       	rcall	.-628    	; 0xa08 <transmit_data>
     c7c:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <LIVES>
     c80:	7c df       	rcall	.-264    	; 0xb7a <Write7Seg>
     c82:	3f df       	rcall	.-386    	; 0xb02 <transmit_dataA2>
     c84:	c4 e0       	ldi	r28, 0x04	; 4
     c86:	d0 e0       	ldi	r29, 0x00	; 0
     c88:	4d c0       	rjmp	.+154    	; 0xd24 <SMTick1+0x156>
     c8a:	c4 e0       	ldi	r28, 0x04	; 4
     c8c:	d1 e0       	ldi	r29, 0x01	; 1
     c8e:	e8 85       	ldd	r30, Y+8	; 0x08
     c90:	f9 85       	ldd	r31, Y+9	; 0x09
     c92:	81 81       	ldd	r24, Z+1	; 0x01
     c94:	1b df       	rcall	.-458    	; 0xacc <transmit_dataA1>
     c96:	e8 85       	ldd	r30, Y+8	; 0x08
     c98:	f9 85       	ldd	r31, Y+9	; 0x09
     c9a:	62 e0       	ldi	r22, 0x02	; 2
     c9c:	80 81       	ld	r24, Z
     c9e:	b4 de       	rcall	.-664    	; 0xa08 <transmit_data>
     ca0:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <LIVES>
     ca4:	6a df       	rcall	.-300    	; 0xb7a <Write7Seg>
     ca6:	2d df       	rcall	.-422    	; 0xb02 <transmit_dataA2>
     ca8:	c5 e0       	ldi	r28, 0x05	; 5
     caa:	d0 e0       	ldi	r29, 0x00	; 0
     cac:	3b c0       	rjmp	.+118    	; 0xd24 <SMTick1+0x156>
     cae:	c4 e0       	ldi	r28, 0x04	; 4
     cb0:	d1 e0       	ldi	r29, 0x01	; 1
     cb2:	ea 85       	ldd	r30, Y+10	; 0x0a
     cb4:	fb 85       	ldd	r31, Y+11	; 0x0b
     cb6:	81 81       	ldd	r24, Z+1	; 0x01
     cb8:	09 df       	rcall	.-494    	; 0xacc <transmit_dataA1>
     cba:	ea 85       	ldd	r30, Y+10	; 0x0a
     cbc:	fb 85       	ldd	r31, Y+11	; 0x0b
     cbe:	62 e0       	ldi	r22, 0x02	; 2
     cc0:	80 81       	ld	r24, Z
     cc2:	a2 de       	rcall	.-700    	; 0xa08 <transmit_data>
     cc4:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <LIVES>
     cc8:	58 df       	rcall	.-336    	; 0xb7a <Write7Seg>
     cca:	1b df       	rcall	.-458    	; 0xb02 <transmit_dataA2>
     ccc:	c6 e0       	ldi	r28, 0x06	; 6
     cce:	d0 e0       	ldi	r29, 0x00	; 0
     cd0:	29 c0       	rjmp	.+82     	; 0xd24 <SMTick1+0x156>
     cd2:	c4 e0       	ldi	r28, 0x04	; 4
     cd4:	d1 e0       	ldi	r29, 0x01	; 1
     cd6:	ec 85       	ldd	r30, Y+12	; 0x0c
     cd8:	fd 85       	ldd	r31, Y+13	; 0x0d
     cda:	81 81       	ldd	r24, Z+1	; 0x01
     cdc:	f7 de       	rcall	.-530    	; 0xacc <transmit_dataA1>
     cde:	ec 85       	ldd	r30, Y+12	; 0x0c
     ce0:	fd 85       	ldd	r31, Y+13	; 0x0d
     ce2:	62 e0       	ldi	r22, 0x02	; 2
     ce4:	80 81       	ld	r24, Z
     ce6:	90 de       	rcall	.-736    	; 0xa08 <transmit_data>
     ce8:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <LIVES>
     cec:	46 df       	rcall	.-372    	; 0xb7a <Write7Seg>
     cee:	09 df       	rcall	.-494    	; 0xb02 <transmit_dataA2>
     cf0:	c7 e0       	ldi	r28, 0x07	; 7
     cf2:	d0 e0       	ldi	r29, 0x00	; 0
     cf4:	17 c0       	rjmp	.+46     	; 0xd24 <SMTick1+0x156>
     cf6:	c4 e0       	ldi	r28, 0x04	; 4
     cf8:	d1 e0       	ldi	r29, 0x01	; 1
     cfa:	ee 85       	ldd	r30, Y+14	; 0x0e
     cfc:	ff 85       	ldd	r31, Y+15	; 0x0f
     cfe:	81 81       	ldd	r24, Z+1	; 0x01
     d00:	e5 de       	rcall	.-566    	; 0xacc <transmit_dataA1>
     d02:	ee 85       	ldd	r30, Y+14	; 0x0e
     d04:	ff 85       	ldd	r31, Y+15	; 0x0f
     d06:	62 e0       	ldi	r22, 0x02	; 2
     d08:	80 81       	ld	r24, Z
     d0a:	7e de       	rcall	.-772    	; 0xa08 <transmit_data>
     d0c:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <LIVES>
     d10:	34 df       	rcall	.-408    	; 0xb7a <Write7Seg>
     d12:	f7 de       	rcall	.-530    	; 0xb02 <transmit_dataA2>
     d14:	c8 e0       	ldi	r28, 0x08	; 8
     d16:	d0 e0       	ldi	r29, 0x00	; 0
     d18:	05 c0       	rjmp	.+10     	; 0xd24 <SMTick1+0x156>
     d1a:	c0 e0       	ldi	r28, 0x00	; 0
     d1c:	d0 e0       	ldi	r29, 0x00	; 0
     d1e:	02 c0       	rjmp	.+4      	; 0xd24 <SMTick1+0x156>
     d20:	cf ef       	ldi	r28, 0xFF	; 255
     d22:	df ef       	ldi	r29, 0xFF	; 255
     d24:	61 e0       	ldi	r22, 0x01	; 1
     d26:	80 e0       	ldi	r24, 0x00	; 0
     d28:	6f de       	rcall	.-802    	; 0xa08 <transmit_data>
     d2a:	62 e0       	ldi	r22, 0x02	; 2
     d2c:	8f ef       	ldi	r24, 0xFF	; 255
     d2e:	6c de       	rcall	.-808    	; 0xa08 <transmit_data>
     d30:	ce 01       	movw	r24, r28
     d32:	df 91       	pop	r29
     d34:	cf 91       	pop	r28
     d36:	08 95       	ret

00000d38 <CONTROLLER>:
     d38:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <Controller_Keys+0x1>
     d3c:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <Controller_Keys>
     d40:	88 b1       	in	r24, 0x08	; 8
     d42:	e0 91 44 01 	lds	r30, 0x0144	; 0x800144 <latch_cnt>
     d46:	f0 e0       	ldi	r31, 0x00	; 0
     d48:	eb 5e       	subi	r30, 0xEB	; 235
     d4a:	fe 4f       	sbci	r31, 0xFE	; 254
     d4c:	90 81       	ld	r25, Z
     d4e:	99 23       	and	r25, r25
     d50:	11 f0       	breq	.+4      	; 0xd56 <CONTROLLER+0x1e>
     d52:	82 60       	ori	r24, 0x02	; 2
     d54:	01 c0       	rjmp	.+2      	; 0xd58 <CONTROLLER+0x20>
     d56:	8d 7f       	andi	r24, 0xFD	; 253
     d58:	88 b9       	out	0x08, r24	; 8
     d5a:	88 b1       	in	r24, 0x08	; 8
     d5c:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <clock_cnt>
     d60:	f0 e0       	ldi	r31, 0x00	; 0
     d62:	eb 5e       	subi	r30, 0xEB	; 235
     d64:	fe 4f       	sbci	r31, 0xFE	; 254
     d66:	90 81       	ld	r25, Z
     d68:	99 23       	and	r25, r25
     d6a:	11 f0       	breq	.+4      	; 0xd70 <CONTROLLER+0x38>
     d6c:	81 60       	ori	r24, 0x01	; 1
     d6e:	01 c0       	rjmp	.+2      	; 0xd72 <CONTROLLER+0x3a>
     d70:	8e 7f       	andi	r24, 0xFE	; 254
     d72:	88 b9       	out	0x08, r24	; 8
     d74:	81 e0       	ldi	r24, 0x01	; 1
     d76:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <latch_cnt>
     d7a:	88 b1       	in	r24, 0x08	; 8
     d7c:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <ARRAY+0x1>
     d80:	99 23       	and	r25, r25
     d82:	11 f0       	breq	.+4      	; 0xd88 <CONTROLLER+0x50>
     d84:	82 60       	ori	r24, 0x02	; 2
     d86:	01 c0       	rjmp	.+2      	; 0xd8a <CONTROLLER+0x52>
     d88:	8d 7f       	andi	r24, 0xFD	; 253
     d8a:	88 b9       	out	0x08, r24	; 8
     d8c:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <latch_cnt>
     d90:	88 b1       	in	r24, 0x08	; 8
     d92:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <ARRAY>
     d96:	99 23       	and	r25, r25
     d98:	11 f0       	breq	.+4      	; 0xd9e <CONTROLLER+0x66>
     d9a:	82 60       	ori	r24, 0x02	; 2
     d9c:	01 c0       	rjmp	.+2      	; 0xda0 <CONTROLLER+0x68>
     d9e:	8d 7f       	andi	r24, 0xFD	; 253
     da0:	88 b9       	out	0x08, r24	; 8
     da2:	86 b1       	in	r24, 0x06	; 6
     da4:	80 95       	com	r24
     da6:	84 70       	andi	r24, 0x04	; 4
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <Controller_Keys+0x1>
     dae:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <Controller_Keys>
     db2:	3e e0       	ldi	r19, 0x0E	; 14
     db4:	e5 e1       	ldi	r30, 0x15	; 21
     db6:	f1 e0       	ldi	r31, 0x01	; 1
     db8:	41 e0       	ldi	r20, 0x01	; 1
     dba:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <clock_cnt>
     dbe:	88 b1       	in	r24, 0x08	; 8
     dc0:	90 81       	ld	r25, Z
     dc2:	99 23       	and	r25, r25
     dc4:	11 f0       	breq	.+4      	; 0xdca <CONTROLLER+0x92>
     dc6:	81 60       	ori	r24, 0x01	; 1
     dc8:	01 c0       	rjmp	.+2      	; 0xdcc <CONTROLLER+0x94>
     dca:	8e 7f       	andi	r24, 0xFE	; 254
     dcc:	88 b9       	out	0x08, r24	; 8
     dce:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <Controller_Keys>
     dd2:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <Controller_Keys+0x1>
     dd6:	88 0f       	add	r24, r24
     dd8:	99 1f       	adc	r25, r25
     dda:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <Controller_Keys+0x1>
     dde:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <Controller_Keys>
     de2:	26 b1       	in	r18, 0x06	; 6
     de4:	20 95       	com	r18
     de6:	24 70       	andi	r18, 0x04	; 4
     de8:	82 0f       	add	r24, r18
     dea:	91 1d       	adc	r25, r1
     dec:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <Controller_Keys+0x1>
     df0:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <Controller_Keys>
     df4:	40 93 14 01 	sts	0x0114, r20	; 0x800114 <clock_cnt>
     df8:	88 b1       	in	r24, 0x08	; 8
     dfa:	91 81       	ldd	r25, Z+1	; 0x01
     dfc:	99 23       	and	r25, r25
     dfe:	11 f0       	breq	.+4      	; 0xe04 <CONTROLLER+0xcc>
     e00:	81 60       	ori	r24, 0x01	; 1
     e02:	01 c0       	rjmp	.+2      	; 0xe06 <CONTROLLER+0xce>
     e04:	8e 7f       	andi	r24, 0xFE	; 254
     e06:	88 b9       	out	0x08, r24	; 8
     e08:	31 50       	subi	r19, 0x01	; 1
     e0a:	b9 f6       	brne	.-82     	; 0xdba <CONTROLLER+0x82>
     e0c:	08 95       	ret

00000e0e <delay_ms>:
     e0e:	18 16       	cp	r1, r24
     e10:	19 06       	cpc	r1, r25
     e12:	5c f0       	brlt	.+22     	; 0xe2a <delay_ms+0x1c>
     e14:	08 95       	ret
     e16:	00 00       	nop
     e18:	21 50       	subi	r18, 0x01	; 1
     e1a:	31 09       	sbc	r19, r1
     e1c:	e1 f7       	brne	.-8      	; 0xe16 <delay_ms+0x8>
     e1e:	4f 5f       	subi	r20, 0xFF	; 255
     e20:	5f 4f       	sbci	r21, 0xFF	; 255
     e22:	84 17       	cp	r24, r20
     e24:	95 07       	cpc	r25, r21
     e26:	19 f4       	brne	.+6      	; 0xe2e <delay_ms+0x20>
     e28:	08 95       	ret
     e2a:	40 e0       	ldi	r20, 0x00	; 0
     e2c:	50 e0       	ldi	r21, 0x00	; 0
     e2e:	27 e0       	ldi	r18, 0x07	; 7
     e30:	33 e0       	ldi	r19, 0x03	; 3
     e32:	f1 cf       	rjmp	.-30     	; 0xe16 <delay_ms+0x8>

00000e34 <LCD_WriteCommand>:
     e34:	43 98       	cbi	0x08, 3	; 8
     e36:	86 de       	rcall	.-756    	; 0xb44 <transmit_dataD1>
     e38:	44 9a       	sbi	0x08, 4	; 8
     e3a:	00 00       	nop
     e3c:	44 98       	cbi	0x08, 4	; 8
     e3e:	82 e0       	ldi	r24, 0x02	; 2
     e40:	90 e0       	ldi	r25, 0x00	; 0
     e42:	e5 cf       	rjmp	.-54     	; 0xe0e <delay_ms>
     e44:	08 95       	ret

00000e46 <LCD_init>:
     e46:	84 e6       	ldi	r24, 0x64	; 100
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	e1 df       	rcall	.-62     	; 0xe0e <delay_ms>
     e4c:	88 e3       	ldi	r24, 0x38	; 56
     e4e:	f2 df       	rcall	.-28     	; 0xe34 <LCD_WriteCommand>
     e50:	86 e0       	ldi	r24, 0x06	; 6
     e52:	f0 df       	rcall	.-32     	; 0xe34 <LCD_WriteCommand>
     e54:	8f e0       	ldi	r24, 0x0F	; 15
     e56:	ee df       	rcall	.-36     	; 0xe34 <LCD_WriteCommand>
     e58:	81 e0       	ldi	r24, 0x01	; 1
     e5a:	ec df       	rcall	.-40     	; 0xe34 <LCD_WriteCommand>
     e5c:	8a e0       	ldi	r24, 0x0A	; 10
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	d6 cf       	rjmp	.-84     	; 0xe0e <delay_ms>
     e62:	08 95       	ret

00000e64 <SMTick4>:
unsigned char press = 0;

//game states
int SMTick4(int state)
{
	switch(state)
     e64:	81 30       	cpi	r24, 0x01	; 1
     e66:	91 05       	cpc	r25, r1
     e68:	91 f1       	breq	.+100    	; 0xece <SMTick4+0x6a>
     e6a:	44 f4       	brge	.+16     	; 0xe7c <SMTick4+0x18>
     e6c:	8f 3f       	cpi	r24, 0xFF	; 255
     e6e:	2f ef       	ldi	r18, 0xFF	; 255
     e70:	92 07       	cpc	r25, r18
     e72:	09 f4       	brne	.+2      	; 0xe76 <SMTick4+0x12>
     e74:	95 c0       	rjmp	.+298    	; 0xfa0 <SMTick4+0x13c>
     e76:	89 2b       	or	r24, r25
     e78:	59 f0       	breq	.+22     	; 0xe90 <SMTick4+0x2c>
     e7a:	f0 c0       	rjmp	.+480    	; 0x105c <SMTick4+0x1f8>
     e7c:	83 30       	cpi	r24, 0x03	; 3
     e7e:	91 05       	cpc	r25, r1
     e80:	09 f4       	brne	.+2      	; 0xe84 <SMTick4+0x20>
     e82:	68 c0       	rjmp	.+208    	; 0xf54 <SMTick4+0xf0>
     e84:	0c f4       	brge	.+2      	; 0xe88 <SMTick4+0x24>
     e86:	4a c0       	rjmp	.+148    	; 0xf1c <SMTick4+0xb8>
     e88:	04 97       	sbiw	r24, 0x04	; 4
     e8a:	09 f4       	brne	.+2      	; 0xe8e <SMTick4+0x2a>
     e8c:	77 c0       	rjmp	.+238    	; 0xf7c <SMTick4+0x118>
     e8e:	e6 c0       	rjmp	.+460    	; 0x105c <SMTick4+0x1f8>
	{
		case -1:
			state = BEGAN;
			break;
		case BEGAN:
			if( Controller_Keys & SNES_SELECT )
     e90:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <Controller_Keys>
     e94:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <Controller_Keys+0x1>
     e98:	95 ff       	sbrs	r25, 5
     e9a:	06 c0       	rjmp	.+12     	; 0xea8 <SMTick4+0x44>
			{
				OFF(ROWS);
     e9c:	84 e0       	ldi	r24, 0x04	; 4
     e9e:	91 e0       	ldi	r25, 0x01	; 1
     ea0:	20 da       	rcall	.-3008   	; 0x2e2 <OFF>
				state = -1;
     ea2:	8f ef       	ldi	r24, 0xFF	; 255
     ea4:	9f ef       	ldi	r25, 0xFF	; 255
     ea6:	08 95       	ret
			}
			else if(Controller_Keys & SNES_START)
     ea8:	94 ff       	sbrs	r25, 4
     eaa:	ad c0       	rjmp	.+346    	; 0x1006 <SMTick4+0x1a2>
			{
				Row_init(ROWS);
     eac:	84 e0       	ldi	r24, 0x04	; 4
     eae:	91 e0       	ldi	r25, 0x01	; 1
     eb0:	53 da       	rcall	.-2906   	; 0x358 <Row_init>
				
				begin = 1;
     eb2:	81 e0       	ldi	r24, 0x01	; 1
     eb4:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <begin>
				LIVES = 5;
     eb8:	85 e0       	ldi	r24, 0x05	; 5
     eba:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <LIVES>
				BLOCK_NUM = 24;
     ebe:	88 e1       	ldi	r24, 0x18	; 24
     ec0:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <BLOCK_NUM>
				ball.GAMEOVER = 0;
     ec4:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <ball+0x6>
				state = GAME_START;
     ec8:	82 e0       	ldi	r24, 0x02	; 2
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	08 95       	ret
			}
			else state = Began2;
			break;
		case Began2:
			if( Controller_Keys & SNES_SELECT )
     ece:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <Controller_Keys>
     ed2:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <Controller_Keys+0x1>
     ed6:	95 ff       	sbrs	r25, 5
     ed8:	08 c0       	rjmp	.+16     	; 0xeea <SMTick4+0x86>
			{
				OFF(ROWS);
     eda:	84 e0       	ldi	r24, 0x04	; 4
     edc:	91 e0       	ldi	r25, 0x01	; 1
     ede:	01 da       	rcall	.-3070   	; 0x2e2 <OFF>
				LOST = 0;
     ee0:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <LOST>
				state = -1;
     ee4:	8f ef       	ldi	r24, 0xFF	; 255
     ee6:	9f ef       	ldi	r25, 0xFF	; 255
     ee8:	08 95       	ret
			}
			else if(Controller_Keys & SNES_START)
     eea:	94 ff       	sbrs	r25, 4
			{
				Row_init(ROWS);
     eec:	11 c0       	rjmp	.+34     	; 0xf10 <SMTick4+0xac>
     eee:	84 e0       	ldi	r24, 0x04	; 4
     ef0:	91 e0       	ldi	r25, 0x01	; 1
     ef2:	32 da       	rcall	.-2972   	; 0x358 <Row_init>
				
				begin = 1;
     ef4:	81 e0       	ldi	r24, 0x01	; 1
     ef6:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <begin>
				LIVES = 5;
     efa:	85 e0       	ldi	r24, 0x05	; 5
     efc:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <LIVES>
				BLOCK_NUM = 24;
     f00:	88 e1       	ldi	r24, 0x18	; 24
     f02:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <BLOCK_NUM>
				ball.GAMEOVER = 0;
     f06:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <ball+0x6>
				state = GAME_START;
     f0a:	82 e0       	ldi	r24, 0x02	; 2
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	08 95       	ret
			}
			else if(press == 0) state = BEGAN;
     f10:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <press>
     f14:	88 23       	and	r24, r24
     f16:	09 f4       	brne	.+2      	; 0xf1a <SMTick4+0xb6>
     f18:	55 c0       	rjmp	.+170    	; 0xfc4 <SMTick4+0x160>
     f1a:	75 c0       	rjmp	.+234    	; 0x1006 <SMTick4+0x1a2>
			break;
		case GAME_START:
			if( Controller_Keys & SNES_SELECT )
     f1c:	20 91 45 01 	lds	r18, 0x0145	; 0x800145 <Controller_Keys>
     f20:	30 91 46 01 	lds	r19, 0x0146	; 0x800146 <Controller_Keys+0x1>
     f24:	35 ff       	sbrs	r19, 5
			{
				OFF(ROWS);
     f26:	05 c0       	rjmp	.+10     	; 0xf32 <SMTick4+0xce>
     f28:	84 e0       	ldi	r24, 0x04	; 4
     f2a:	91 e0       	ldi	r25, 0x01	; 1
     f2c:	da d9       	rcall	.-3148   	; 0x2e2 <OFF>
				state = -1;
     f2e:	8f ef       	ldi	r24, 0xFF	; 255
     f30:	9f ef       	ldi	r25, 0xFF	; 255
			}
			if( LOST == 1 || (Controller_Keys & SNES_R)) state = LOOSE;
     f32:	20 91 49 01 	lds	r18, 0x0149	; 0x800149 <LOST>
     f36:	21 30       	cpi	r18, 0x01	; 1
     f38:	09 f4       	brne	.+2      	; 0xf3c <SMTick4+0xd8>
     f3a:	7c c0       	rjmp	.+248    	; 0x1034 <SMTick4+0x1d0>
     f3c:	20 91 45 01 	lds	r18, 0x0145	; 0x800145 <Controller_Keys>
     f40:	24 fd       	sbrc	r18, 4
     f42:	78 c0       	rjmp	.+240    	; 0x1034 <SMTick4+0x1d0>
			else if(WIN == 1 || (Controller_Keys & SNES_L)) state = WON;
     f44:	30 91 48 01 	lds	r19, 0x0148	; 0x800148 <WIN>
     f48:	31 30       	cpi	r19, 0x01	; 1
     f4a:	09 f4       	brne	.+2      	; 0xf4e <SMTick4+0xea>
     f4c:	7d c0       	rjmp	.+250    	; 0x1048 <SMTick4+0x1e4>
     f4e:	25 fd       	sbrc	r18, 5
     f50:	7b c0       	rjmp	.+246    	; 0x1048 <SMTick4+0x1e4>
     f52:	28 c0       	rjmp	.+80     	; 0xfa4 <SMTick4+0x140>
			break;
		case LOOSE:
			if( Controller_Keys & SNES_SELECT )
     f54:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <Controller_Keys>
     f58:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <Controller_Keys+0x1>
     f5c:	95 ff       	sbrs	r25, 5
			{
				OFF(ROWS);
     f5e:	08 c0       	rjmp	.+16     	; 0xf70 <SMTick4+0x10c>
     f60:	84 e0       	ldi	r24, 0x04	; 4
     f62:	91 e0       	ldi	r25, 0x01	; 1
     f64:	be d9       	rcall	.-3204   	; 0x2e2 <OFF>
				LOST = 0;
     f66:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <LOST>
				state = -1;
     f6a:	8f ef       	ldi	r24, 0xFF	; 255
     f6c:	9f ef       	ldi	r25, 0xFF	; 255
			}
			else{
				set_PWM(349.23);
     f6e:	08 95       	ret
     f70:	61 e7       	ldi	r22, 0x71	; 113
     f72:	7d e9       	ldi	r23, 0x9D	; 157
     f74:	8e ea       	ldi	r24, 0xAE	; 174
     f76:	93 e4       	ldi	r25, 0x43	; 67
     f78:	3a d9       	rcall	.-3468   	; 0x1ee <set_PWM>
     f7a:	5c c0       	rjmp	.+184    	; 0x1034 <SMTick4+0x1d0>
				state = LOOSE;
			}				
			
			break;
		case WON:
			if( Controller_Keys & SNES_SELECT )
     f7c:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <Controller_Keys>
     f80:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <Controller_Keys+0x1>
     f84:	95 ff       	sbrs	r25, 5
			{
				OFF(ROWS);
     f86:	06 c0       	rjmp	.+12     	; 0xf94 <SMTick4+0x130>
     f88:	84 e0       	ldi	r24, 0x04	; 4
     f8a:	91 e0       	ldi	r25, 0x01	; 1
				state = -1;
     f8c:	aa d9       	rcall	.-3244   	; 0x2e2 <OFF>
     f8e:	8f ef       	ldi	r24, 0xFF	; 255
     f90:	9f ef       	ldi	r25, 0xFF	; 255
			}
			else{
				set_PWM(493.88);
     f92:	08 95       	ret
     f94:	64 ea       	ldi	r22, 0xA4	; 164
     f96:	70 ef       	ldi	r23, 0xF0	; 240
     f98:	86 ef       	ldi	r24, 0xF6	; 246
     f9a:	93 e4       	ldi	r25, 0x43	; 67
     f9c:	28 d9       	rcall	.-3504   	; 0x1ee <set_PWM>
     f9e:	54 c0       	rjmp	.+168    	; 0x1048 <SMTick4+0x1e4>
int SMTick4(int state)
{
	switch(state)
	{
		case -1:
			state = BEGAN;
     fa0:	80 e0       	ldi	r24, 0x00	; 0
     fa2:	90 e0       	ldi	r25, 0x00	; 0
		default:
			state = -1;
			break;
	}
	
	switch(state)
     fa4:	81 30       	cpi	r24, 0x01	; 1
     fa6:	91 05       	cpc	r25, r1
     fa8:	71 f1       	breq	.+92     	; 0x1006 <SMTick4+0x1a2>
     faa:	1c f4       	brge	.+6      	; 0xfb2 <SMTick4+0x14e>
     fac:	00 97       	sbiw	r24, 0x00	; 0
     fae:	51 f0       	breq	.+20     	; 0xfc4 <SMTick4+0x160>
     fb0:	08 95       	ret
     fb2:	83 30       	cpi	r24, 0x03	; 3
     fb4:	91 05       	cpc	r25, r1
     fb6:	09 f4       	brne	.+2      	; 0xfba <SMTick4+0x156>
     fb8:	3d c0       	rjmp	.+122    	; 0x1034 <SMTick4+0x1d0>
     fba:	84 30       	cpi	r24, 0x04	; 4
     fbc:	91 05       	cpc	r25, r1
     fbe:	09 f4       	brne	.+2      	; 0xfc2 <SMTick4+0x15e>
     fc0:	43 c0       	rjmp	.+134    	; 0x1048 <SMTick4+0x1e4>
	{
		case BEGAN:
			OFF(ROWS);
     fc2:	08 95       	ret
     fc4:	84 e0       	ldi	r24, 0x04	; 4
     fc6:	91 e0       	ldi	r25, 0x01	; 1
     fc8:	8c d9       	rcall	.-3304   	; 0x2e2 <OFF>
			press = 0;
     fca:	10 92 43 01 	sts	0x0143, r1	; 0x800143 <press>
			LEVEL = 1;
     fce:	81 e0       	ldi	r24, 0x01	; 1
     fd0:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <LEVEL>
			begin = 0;
     fd4:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <begin>
			LIVES = 0;
     fd8:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <LIVES>
			SCORE = 0;
     fdc:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <SCORE>
			ball.GAMEOVER = 1;
			WIN = 0;
     fe0:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <ball+0x6>
			LOST = 0;
			set_PWM(0);
     fe4:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <WIN>
     fe8:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <LOST>
     fec:	60 e0       	ldi	r22, 0x00	; 0
			//LCD_ClearScreen();
			/*LCD_DisplayString(1, welcome);*/
			transmit_dataA2(Write7Seg(0));
     fee:	70 e0       	ldi	r23, 0x00	; 0
     ff0:	cb 01       	movw	r24, r22
     ff2:	fd d8       	rcall	.-3590   	; 0x1ee <set_PWM>
     ff4:	80 e0       	ldi	r24, 0x00	; 0
			delay_ms(300);
     ff6:	c1 dd       	rcall	.-1150   	; 0xb7a <Write7Seg>
     ff8:	84 dd       	rcall	.-1272   	; 0xb02 <transmit_dataA2>
     ffa:	8c e2       	ldi	r24, 0x2C	; 44
     ffc:	91 e0       	ldi	r25, 0x01	; 1
			break;
     ffe:	07 df       	rcall	.-498    	; 0xe0e <delay_ms>
    1000:	80 e0       	ldi	r24, 0x00	; 0
    1002:	90 e0       	ldi	r25, 0x00	; 0
		case Began2:
			OFF(ROWS);
    1004:	08 95       	ret
    1006:	84 e0       	ldi	r24, 0x04	; 4
			begin = 0;
    1008:	91 e0       	ldi	r25, 0x01	; 1
			LIVES = 0;
    100a:	6b d9       	rcall	.-3370   	; 0x2e2 <OFF>
    100c:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <begin>
			ball.GAMEOVER = 1;
    1010:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <LIVES>
			WIN = 0;
    1014:	81 e0       	ldi	r24, 0x01	; 1
    1016:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <ball+0x6>
			LOST = 0;
    101a:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <WIN>
			

			
			//LCD_ClearScreen();
			//LCD_DisplayString(1, str);
			transmit_dataA2(Write7Seg(0));
    101e:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <LOST>
    1022:	80 e0       	ldi	r24, 0x00	; 0
			delay_ms(300);
    1024:	aa dd       	rcall	.-1196   	; 0xb7a <Write7Seg>
    1026:	6d dd       	rcall	.-1318   	; 0xb02 <transmit_dataA2>
    1028:	8c e2       	ldi	r24, 0x2C	; 44
    102a:	91 e0       	ldi	r25, 0x01	; 1
			break;
    102c:	f0 de       	rcall	.-544    	; 0xe0e <delay_ms>
    102e:	81 e0       	ldi	r24, 0x01	; 1
		case GAME_START:	
			break;		
		case LOOSE:
			begin = 0;
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	08 95       	ret
			LOST = 0;
    1034:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <begin>
			GameOver(ROWS);
    1038:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <LOST>
    103c:	84 e0       	ldi	r24, 0x04	; 4
    103e:	91 e0       	ldi	r25, 0x01	; 1
			break;
    1040:	0a da       	rcall	.-3052   	; 0x456 <GameOver>
    1042:	83 e0       	ldi	r24, 0x03	; 3
    1044:	90 e0       	ldi	r25, 0x00	; 0
		case WON:
			begin = 0;
    1046:	08 95       	ret
    1048:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <begin>
			WIN = 0;
    104c:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <WIN>
			GAMEWON(ROWS);
    1050:	84 e0       	ldi	r24, 0x04	; 4
    1052:	91 e0       	ldi	r25, 0x01	; 1
    1054:	3f da       	rcall	.-2946   	; 0x4d4 <GAMEWON>
			break;
    1056:	84 e0       	ldi	r24, 0x04	; 4
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	08 95       	ret
				state = WON;
			}				
							
			break;
		default:
			state = -1;
    105c:	8f ef       	ldi	r24, 0xFF	; 255
    105e:	9f ef       	ldi	r25, 0xFF	; 255
		default:
			break;
	}
	
	return state;
}
    1060:	08 95       	ret

00001062 <main>:
int SMTick4(int state);
int SMTick5(int state);


int main()
{
    1062:	cf 93       	push	r28
    1064:	df 93       	push	r29
    1066:	cd b7       	in	r28, 0x3d	; 61
    1068:	de b7       	in	r29, 0x3e	; 62
    106a:	2a 97       	sbiw	r28, 0x0a	; 10
    106c:	0f b6       	in	r0, 0x3f	; 63
    106e:	f8 94       	cli
    1070:	de bf       	out	0x3e, r29	; 62
    1072:	0f be       	out	0x3f, r0	; 63
    1074:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0xFF; PORTA = 0x00;
    1076:	8f ef       	ldi	r24, 0xFF	; 255
    1078:	81 b9       	out	0x01, r24	; 1
    107a:	12 b8       	out	0x02, r1	; 2
	DDRB = 0xFF; PORTB = 0x00;
    107c:	84 b9       	out	0x04, r24	; 4
    107e:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFB; PORTC = 0x04;
    1080:	9b ef       	ldi	r25, 0xFB	; 251
    1082:	97 b9       	out	0x07, r25	; 7
    1084:	94 e0       	ldi	r25, 0x04	; 4
    1086:	98 b9       	out	0x08, r25	; 8
	DDRD = 0xFF; PORTD = 0x00;
    1088:	8a b9       	out	0x0a, r24	; 10
    108a:	1b b8       	out	0x0b, r1	; 11

	LCD_init();
    108c:	dc de       	rcall	.-584    	; 0xe46 <LCD_init>
	PWM_on();
    108e:	06 d9       	rcall	.-3572   	; 0x29c <PWM_on>
    1090:	24 e6       	ldi	r18, 0x64	; 100
    1092:	81 e0       	ldi	r24, 0x01	; 1
    1094:	01 c0       	rjmp	.+2      	; 0x1098 <main+0x36>
    1096:	29 2f       	mov	r18, r25
//--------Find GCD function --------------------------------------------------
unsigned char findGCD(unsigned char a, unsigned char b)
{
	unsigned char c;
	while(1){
		c = a%b;
    1098:	62 2f       	mov	r22, r18
    109a:	38 d2       	rcall	.+1136   	; 0x150c <__udivmodqi4>
    109c:	82 2f       	mov	r24, r18
    109e:	91 11       	cpse	r25, r1
		if(c==0){return b;}
    10a0:	fa cf       	rjmp	.-12     	; 0x1096 <main+0x34>
    10a2:	36 e9       	ldi	r19, 0x96	; 150
    10a4:	01 c0       	rjmp	.+2      	; 0x10a8 <main+0x46>
    10a6:	39 2f       	mov	r19, r25
//--------Find GCD function --------------------------------------------------
unsigned char findGCD(unsigned char a, unsigned char b)
{
	unsigned char c;
	while(1){
		c = a%b;
    10a8:	82 2f       	mov	r24, r18
    10aa:	63 2f       	mov	r22, r19
    10ac:	2f d2       	rcall	.+1118   	; 0x150c <__udivmodqi4>
    10ae:	23 2f       	mov	r18, r19
    10b0:	91 11       	cpse	r25, r1
		if(c==0){return b;}
    10b2:	f9 cf       	rjmp	.-14     	; 0x10a6 <main+0x44>
    10b4:	24 e6       	ldi	r18, 0x64	; 100
    10b6:	01 c0       	rjmp	.+2      	; 0x10ba <main+0x58>
		a = b;
		b = c;
    10b8:	29 2f       	mov	r18, r25
//--------Find GCD function --------------------------------------------------
unsigned char findGCD(unsigned char a, unsigned char b)
{
	unsigned char c;
	while(1){
		c = a%b;
    10ba:	83 2f       	mov	r24, r19
    10bc:	62 2f       	mov	r22, r18
    10be:	26 d2       	rcall	.+1100   	; 0x150c <__udivmodqi4>
    10c0:	32 2f       	mov	r19, r18
    10c2:	91 11       	cpse	r25, r1
		if(c==0){return b;}
    10c4:	f9 cf       	rjmp	.-14     	; 0x10b8 <main+0x56>
    10c6:	34 ef       	ldi	r19, 0xF4	; 244
    10c8:	01 c0       	rjmp	.+2      	; 0x10cc <main+0x6a>
		a = b;
		b = c;
    10ca:	39 2f       	mov	r19, r25
//--------Find GCD function --------------------------------------------------
unsigned char findGCD(unsigned char a, unsigned char b)
{
	unsigned char c;
	while(1){
		c = a%b;
    10cc:	82 2f       	mov	r24, r18
    10ce:	63 2f       	mov	r22, r19
    10d0:	1d d2       	rcall	.+1082   	; 0x150c <__udivmodqi4>
    10d2:	23 2f       	mov	r18, r19
    10d4:	91 11       	cpse	r25, r1
		if(c==0){return b;}
    10d6:	f9 cf       	rjmp	.-14     	; 0x10ca <main+0x68>
    10d8:	c3 2e       	mov	r12, r19
	//Calculating GCD
	unsigned long int tmpGCD = 1;
	tmpGCD = findGCD(SMTick1_calc, SMTick2_calc  );
	tmpGCD = findGCD(tmpGCD, SMTick3_calc);
	tmpGCD = findGCD(tmpGCD, SMTick4_calc);
	tmpGCD = findGCD(tmpGCD, SMTick5_calc);
    10da:	d1 2c       	mov	r13, r1
    10dc:	e1 2c       	mov	r14, r1
    10de:	f1 2c       	mov	r15, r1
    10e0:	8a e0       	ldi	r24, 0x0A	; 10
	unsigned long int SMTick4_period = SMTick4_calc/GCD;
	unsigned long int SMTick5_period = SMTick5_calc/GCD;

	//Declare an array of tasks
	static task task1, task2, task3, task4, task5;
	task *tasks[] = { &task1, &task2, &task3, &task4, &task5};
    10e2:	ef e1       	ldi	r30, 0x1F	; 31
    10e4:	f1 e0       	ldi	r31, 0x01	; 1
    10e6:	de 01       	movw	r26, r28
    10e8:	11 96       	adiw	r26, 0x01	; 1
    10ea:	01 90       	ld	r0, Z+
    10ec:	0d 92       	st	X+, r0
    10ee:	8a 95       	dec	r24
    10f0:	e1 f7       	brne	.-8      	; 0x10ea <main+0x88>
    10f2:	0f 2e       	mov	r0, r31
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

	// Task 1
	task1.state = -1;//Task initial state.
    10f4:	fe e3       	ldi	r31, 0x3E	; 62
    10f6:	af 2e       	mov	r10, r31
    10f8:	f1 e0       	ldi	r31, 0x01	; 1
    10fa:	bf 2e       	mov	r11, r31
    10fc:	f0 2d       	mov	r31, r0
    10fe:	1f ef       	ldi	r17, 0xFF	; 255
    1100:	d5 01       	movw	r26, r10
    1102:	1c 93       	st	X, r17
    1104:	61 e0       	ldi	r22, 0x01	; 1
	task1.period = SMTick1_period;//Task Period.
    1106:	70 e0       	ldi	r23, 0x00	; 0
    1108:	80 e0       	ldi	r24, 0x00	; 0
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	a7 01       	movw	r20, r14
    110e:	96 01       	movw	r18, r12
    1110:	09 d2       	rcall	.+1042   	; 0x1524 <__udivmodsi4>
    1112:	f5 01       	movw	r30, r10
    1114:	21 83       	std	Z+1, r18	; 0x01
    1116:	22 83       	std	Z+2, r18	; 0x02
	task1.elapsedTime = SMTick1_period;//Task current elapsed time.
    1118:	87 ee       	ldi	r24, 0xE7	; 231
	task1.TickFct = &SMTick1;//Function pointer for the tick.
    111a:	95 e0       	ldi	r25, 0x05	; 5
    111c:	94 83       	std	Z+4, r25	; 0x04
    111e:	83 83       	std	Z+3, r24	; 0x03
    1120:	0f 2e       	mov	r0, r31
	
	// Task 2
	task2.state = -1;//Task initial state.
    1122:	f9 e3       	ldi	r31, 0x39	; 57
    1124:	af 2e       	mov	r10, r31
    1126:	f1 e0       	ldi	r31, 0x01	; 1
    1128:	bf 2e       	mov	r11, r31
    112a:	f0 2d       	mov	r31, r0
    112c:	d5 01       	movw	r26, r10
    112e:	1c 93       	st	X, r17
	task2.period = SMTick2_period;//Task Period.
    1130:	64 e6       	ldi	r22, 0x64	; 100
    1132:	70 e0       	ldi	r23, 0x00	; 0
    1134:	80 e0       	ldi	r24, 0x00	; 0
    1136:	90 e0       	ldi	r25, 0x00	; 0
    1138:	a7 01       	movw	r20, r14
    113a:	96 01       	movw	r18, r12
    113c:	f3 d1       	rcall	.+998    	; 0x1524 <__udivmodsi4>
    113e:	02 2f       	mov	r16, r18
    1140:	f5 01       	movw	r30, r10
    1142:	21 83       	std	Z+1, r18	; 0x01
    1144:	22 83       	std	Z+2, r18	; 0x02
	task2.elapsedTime = SMTick2_period;//Task current elapsed time.
    1146:	8e e6       	ldi	r24, 0x6E	; 110
	task2.TickFct = &SMTick2;//Function pointer for the tick.
    1148:	93 e0       	ldi	r25, 0x03	; 3
    114a:	94 83       	std	Z+4, r25	; 0x04
    114c:	83 83       	std	Z+3, r24	; 0x03
    114e:	0f 2e       	mov	r0, r31
	
	
	// Task 3
	task3.state = -1;//Task initial state.
    1150:	f4 e3       	ldi	r31, 0x34	; 52
    1152:	af 2e       	mov	r10, r31
    1154:	f1 e0       	ldi	r31, 0x01	; 1
    1156:	bf 2e       	mov	r11, r31
    1158:	f0 2d       	mov	r31, r0
    115a:	d5 01       	movw	r26, r10
    115c:	1c 93       	st	X, r17
	task3.period = SMTick3_period;//Task Period.
    115e:	66 e9       	ldi	r22, 0x96	; 150
    1160:	70 e0       	ldi	r23, 0x00	; 0
    1162:	80 e0       	ldi	r24, 0x00	; 0
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	a7 01       	movw	r20, r14
    1168:	96 01       	movw	r18, r12
    116a:	dc d1       	rcall	.+952    	; 0x1524 <__udivmodsi4>
    116c:	f5 01       	movw	r30, r10
    116e:	21 83       	std	Z+1, r18	; 0x01
    1170:	22 83       	std	Z+2, r18	; 0x02
	task3.elapsedTime = SMTick3_period; // Task current elasped time.
    1172:	86 e0       	ldi	r24, 0x06	; 6
	task3.TickFct = &SMTick3; // Function pointer for the tick.
    1174:	94 e0       	ldi	r25, 0x04	; 4
    1176:	94 83       	std	Z+4, r25	; 0x04
    1178:	83 83       	std	Z+3, r24	; 0x03
    117a:	ef e2       	ldi	r30, 0x2F	; 47
	
	// Task 4
	task4.state = -1;//Task initial state.
    117c:	f1 e0       	ldi	r31, 0x01	; 1
    117e:	10 83       	st	Z, r17
    1180:	01 83       	std	Z+1, r16	; 0x01
	task4.period = SMTick4_period;//Task Period.
    1182:	02 83       	std	Z+2, r16	; 0x02
	task4.elapsedTime = SMTick4_period; // Task current elasped time.
    1184:	82 e3       	ldi	r24, 0x32	; 50
	task4.TickFct = &SMTick4; // Function pointer for the tick.
    1186:	97 e0       	ldi	r25, 0x07	; 7
    1188:	94 83       	std	Z+4, r25	; 0x04
    118a:	83 83       	std	Z+3, r24	; 0x03
    118c:	0f 2e       	mov	r0, r31
	
	// Task 5
	task5.state = -1;//Task initial state.
    118e:	fa e2       	ldi	r31, 0x2A	; 42
    1190:	af 2e       	mov	r10, r31
    1192:	f1 e0       	ldi	r31, 0x01	; 1
    1194:	bf 2e       	mov	r11, r31
    1196:	f0 2d       	mov	r31, r0
    1198:	d5 01       	movw	r26, r10
    119a:	1c 93       	st	X, r17
	task5.period = SMTick5_period;//Task Period.
    119c:	64 ef       	ldi	r22, 0xF4	; 244
    119e:	71 e0       	ldi	r23, 0x01	; 1
    11a0:	80 e0       	ldi	r24, 0x00	; 0
    11a2:	90 e0       	ldi	r25, 0x00	; 0
    11a4:	a7 01       	movw	r20, r14
    11a6:	96 01       	movw	r18, r12
    11a8:	bd d1       	rcall	.+890    	; 0x1524 <__udivmodsi4>
    11aa:	f5 01       	movw	r30, r10
    11ac:	21 83       	std	Z+1, r18	; 0x01
    11ae:	22 83       	std	Z+2, r18	; 0x02
	task5.elapsedTime = SMTick5_period; // Task current elasped time.
    11b0:	8d e7       	ldi	r24, 0x7D	; 125
	task5.TickFct = &SMTick5; // Function pointer for the tick.
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	94 83       	std	Z+4, r25	; 0x04
    11b6:	83 83       	std	Z+3, r24	; 0x03
    11b8:	c7 01       	movw	r24, r14
	
	
	// Set the timer and turn it on
	TimerSet(GCD);
    11ba:	b6 01       	movw	r22, r12
    11bc:	0e 94 86 00 	call	0x10c	; 0x10c <TimerSet>
	TimerOn();
    11c0:	0e 94 97 00 	call	0x12e	; 0x12e <TimerOn>
    11c4:	6e 01       	movw	r12, r28
    11c6:	fb e0       	ldi	r31, 0x0B	; 11
    11c8:	cf 0e       	add	r12, r31
    11ca:	d1 1c       	adc	r13, r1

	unsigned short i; // Scheduler for-loop iterator

	while(1) {
		CONTROLLER();
    11cc:	b5 dd       	rcall	.-1174   	; 0xd38 <CONTROLLER>
    11ce:	ce 01       	movw	r24, r28
    11d0:	01 96       	adiw	r24, 0x01	; 1
    11d2:	7c 01       	movw	r14, r24
    11d4:	d7 01       	movw	r26, r14
		
		for ( i = 0; i < numTasks; i++ ) {
			if ( tasks[i]->elapsedTime == tasks[i]->period ) {
    11d6:	0d 91       	ld	r16, X+
    11d8:	1d 91       	ld	r17, X+
    11da:	7d 01       	movw	r14, r26
    11dc:	f8 01       	movw	r30, r16
    11de:	92 81       	ldd	r25, Z+2	; 0x02
    11e0:	81 81       	ldd	r24, Z+1	; 0x01
    11e2:	98 13       	cpse	r25, r24
    11e4:	0c c0       	rjmp	.+24     	; 0x11fe <main+0x19c>
    11e6:	80 81       	ld	r24, Z
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
    11e8:	03 80       	ldd	r0, Z+3	; 0x03
    11ea:	f4 81       	ldd	r31, Z+4	; 0x04
    11ec:	e0 2d       	mov	r30, r0
    11ee:	08 2e       	mov	r0, r24
    11f0:	00 0c       	add	r0, r0
    11f2:	99 0b       	sbc	r25, r25
    11f4:	09 95       	icall
    11f6:	d8 01       	movw	r26, r16
    11f8:	8c 93       	st	X, r24
    11fa:	12 96       	adiw	r26, 0x02	; 2
				tasks[i]->elapsedTime = 0;
    11fc:	1c 92       	st	X, r1
    11fe:	f8 01       	movw	r30, r16
			}
			tasks[i]->elapsedTime += 1;
    1200:	82 81       	ldd	r24, Z+2	; 0x02
    1202:	8f 5f       	subi	r24, 0xFF	; 255
    1204:	82 83       	std	Z+2, r24	; 0x02
    1206:	ec 14       	cp	r14, r12
	unsigned short i; // Scheduler for-loop iterator

	while(1) {
		CONTROLLER();
		
		for ( i = 0; i < numTasks; i++ ) {
    1208:	fd 04       	cpc	r15, r13
    120a:	21 f7       	brne	.-56     	; 0x11d4 <main+0x172>
    120c:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <TimerFlag>
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
				tasks[i]->elapsedTime = 0;
			}
			tasks[i]->elapsedTime += 1;
		}
		while(!TimerFlag);
    1210:	88 23       	and	r24, r24
    1212:	e1 f3       	breq	.-8      	; 0x120c <main+0x1aa>
    1214:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <TimerFlag>
		TimerFlag = 0;
    1218:	d9 cf       	rjmp	.-78     	; 0x11cc <main+0x16a>

0000121a <__cmpsf2>:
	}
    121a:	9c d0       	rcall	.+312    	; 0x1354 <__fp_cmp>
    121c:	08 f4       	brcc	.+2      	; 0x1220 <__cmpsf2+0x6>
    121e:	81 e0       	ldi	r24, 0x01	; 1
    1220:	08 95       	ret

00001222 <__divsf3>:
    1222:	0c d0       	rcall	.+24     	; 0x123c <__divsf3x>
    1224:	d2 c0       	rjmp	.+420    	; 0x13ca <__fp_round>
    1226:	ca d0       	rcall	.+404    	; 0x13bc <__fp_pscB>
    1228:	40 f0       	brcs	.+16     	; 0x123a <__divsf3+0x18>
    122a:	c1 d0       	rcall	.+386    	; 0x13ae <__fp_pscA>
    122c:	30 f0       	brcs	.+12     	; 0x123a <__divsf3+0x18>
    122e:	21 f4       	brne	.+8      	; 0x1238 <__divsf3+0x16>
    1230:	5f 3f       	cpi	r21, 0xFF	; 255
    1232:	19 f0       	breq	.+6      	; 0x123a <__divsf3+0x18>
    1234:	b3 c0       	rjmp	.+358    	; 0x139c <__fp_inf>
    1236:	51 11       	cpse	r21, r1
    1238:	fc c0       	rjmp	.+504    	; 0x1432 <__fp_szero>
    123a:	b6 c0       	rjmp	.+364    	; 0x13a8 <__fp_nan>

0000123c <__divsf3x>:
    123c:	d7 d0       	rcall	.+430    	; 0x13ec <__fp_split3>
    123e:	98 f3       	brcs	.-26     	; 0x1226 <__divsf3+0x4>

00001240 <__divsf3_pse>:
    1240:	99 23       	and	r25, r25
    1242:	c9 f3       	breq	.-14     	; 0x1236 <__divsf3+0x14>
    1244:	55 23       	and	r21, r21
    1246:	b1 f3       	breq	.-20     	; 0x1234 <__divsf3+0x12>
    1248:	95 1b       	sub	r25, r21
    124a:	55 0b       	sbc	r21, r21
    124c:	bb 27       	eor	r27, r27
    124e:	aa 27       	eor	r26, r26
    1250:	62 17       	cp	r22, r18
    1252:	73 07       	cpc	r23, r19
    1254:	84 07       	cpc	r24, r20
    1256:	38 f0       	brcs	.+14     	; 0x1266 <__divsf3_pse+0x26>
    1258:	9f 5f       	subi	r25, 0xFF	; 255
    125a:	5f 4f       	sbci	r21, 0xFF	; 255
    125c:	22 0f       	add	r18, r18
    125e:	33 1f       	adc	r19, r19
    1260:	44 1f       	adc	r20, r20
    1262:	aa 1f       	adc	r26, r26
    1264:	a9 f3       	breq	.-22     	; 0x1250 <__divsf3_pse+0x10>
    1266:	33 d0       	rcall	.+102    	; 0x12ce <__divsf3_pse+0x8e>
    1268:	0e 2e       	mov	r0, r30
    126a:	3a f0       	brmi	.+14     	; 0x127a <__divsf3_pse+0x3a>
    126c:	e0 e8       	ldi	r30, 0x80	; 128
    126e:	30 d0       	rcall	.+96     	; 0x12d0 <__divsf3_pse+0x90>
    1270:	91 50       	subi	r25, 0x01	; 1
    1272:	50 40       	sbci	r21, 0x00	; 0
    1274:	e6 95       	lsr	r30
    1276:	00 1c       	adc	r0, r0
    1278:	ca f7       	brpl	.-14     	; 0x126c <__divsf3_pse+0x2c>
    127a:	29 d0       	rcall	.+82     	; 0x12ce <__divsf3_pse+0x8e>
    127c:	fe 2f       	mov	r31, r30
    127e:	27 d0       	rcall	.+78     	; 0x12ce <__divsf3_pse+0x8e>
    1280:	66 0f       	add	r22, r22
    1282:	77 1f       	adc	r23, r23
    1284:	88 1f       	adc	r24, r24
    1286:	bb 1f       	adc	r27, r27
    1288:	26 17       	cp	r18, r22
    128a:	37 07       	cpc	r19, r23
    128c:	48 07       	cpc	r20, r24
    128e:	ab 07       	cpc	r26, r27
    1290:	b0 e8       	ldi	r27, 0x80	; 128
    1292:	09 f0       	breq	.+2      	; 0x1296 <__divsf3_pse+0x56>
    1294:	bb 0b       	sbc	r27, r27
    1296:	80 2d       	mov	r24, r0
    1298:	bf 01       	movw	r22, r30
    129a:	ff 27       	eor	r31, r31
    129c:	93 58       	subi	r25, 0x83	; 131
    129e:	5f 4f       	sbci	r21, 0xFF	; 255
    12a0:	2a f0       	brmi	.+10     	; 0x12ac <__divsf3_pse+0x6c>
    12a2:	9e 3f       	cpi	r25, 0xFE	; 254
    12a4:	51 05       	cpc	r21, r1
    12a6:	68 f0       	brcs	.+26     	; 0x12c2 <__divsf3_pse+0x82>
    12a8:	79 c0       	rjmp	.+242    	; 0x139c <__fp_inf>
    12aa:	c3 c0       	rjmp	.+390    	; 0x1432 <__fp_szero>
    12ac:	5f 3f       	cpi	r21, 0xFF	; 255
    12ae:	ec f3       	brlt	.-6      	; 0x12aa <__divsf3_pse+0x6a>
    12b0:	98 3e       	cpi	r25, 0xE8	; 232
    12b2:	dc f3       	brlt	.-10     	; 0x12aa <__divsf3_pse+0x6a>
    12b4:	86 95       	lsr	r24
    12b6:	77 95       	ror	r23
    12b8:	67 95       	ror	r22
    12ba:	b7 95       	ror	r27
    12bc:	f7 95       	ror	r31
    12be:	9f 5f       	subi	r25, 0xFF	; 255
    12c0:	c9 f7       	brne	.-14     	; 0x12b4 <__divsf3_pse+0x74>
    12c2:	88 0f       	add	r24, r24
    12c4:	91 1d       	adc	r25, r1
    12c6:	96 95       	lsr	r25
    12c8:	87 95       	ror	r24
    12ca:	97 f9       	bld	r25, 7
    12cc:	08 95       	ret
    12ce:	e1 e0       	ldi	r30, 0x01	; 1
    12d0:	66 0f       	add	r22, r22
    12d2:	77 1f       	adc	r23, r23
    12d4:	88 1f       	adc	r24, r24
    12d6:	bb 1f       	adc	r27, r27
    12d8:	62 17       	cp	r22, r18
    12da:	73 07       	cpc	r23, r19
    12dc:	84 07       	cpc	r24, r20
    12de:	ba 07       	cpc	r27, r26
    12e0:	20 f0       	brcs	.+8      	; 0x12ea <__divsf3_pse+0xaa>
    12e2:	62 1b       	sub	r22, r18
    12e4:	73 0b       	sbc	r23, r19
    12e6:	84 0b       	sbc	r24, r20
    12e8:	ba 0b       	sbc	r27, r26
    12ea:	ee 1f       	adc	r30, r30
    12ec:	88 f7       	brcc	.-30     	; 0x12d0 <__divsf3_pse+0x90>
    12ee:	e0 95       	com	r30
    12f0:	08 95       	ret

000012f2 <__fixsfsi>:
    12f2:	04 d0       	rcall	.+8      	; 0x12fc <__fixunssfsi>
    12f4:	68 94       	set
    12f6:	b1 11       	cpse	r27, r1
    12f8:	9c c0       	rjmp	.+312    	; 0x1432 <__fp_szero>
    12fa:	08 95       	ret

000012fc <__fixunssfsi>:
    12fc:	7f d0       	rcall	.+254    	; 0x13fc <__fp_splitA>
    12fe:	88 f0       	brcs	.+34     	; 0x1322 <__fixunssfsi+0x26>
    1300:	9f 57       	subi	r25, 0x7F	; 127
    1302:	90 f0       	brcs	.+36     	; 0x1328 <__fixunssfsi+0x2c>
    1304:	b9 2f       	mov	r27, r25
    1306:	99 27       	eor	r25, r25
    1308:	b7 51       	subi	r27, 0x17	; 23
    130a:	a0 f0       	brcs	.+40     	; 0x1334 <__fixunssfsi+0x38>
    130c:	d1 f0       	breq	.+52     	; 0x1342 <__fixunssfsi+0x46>
    130e:	66 0f       	add	r22, r22
    1310:	77 1f       	adc	r23, r23
    1312:	88 1f       	adc	r24, r24
    1314:	99 1f       	adc	r25, r25
    1316:	1a f0       	brmi	.+6      	; 0x131e <__fixunssfsi+0x22>
    1318:	ba 95       	dec	r27
    131a:	c9 f7       	brne	.-14     	; 0x130e <__fixunssfsi+0x12>
    131c:	12 c0       	rjmp	.+36     	; 0x1342 <__fixunssfsi+0x46>
    131e:	b1 30       	cpi	r27, 0x01	; 1
    1320:	81 f0       	breq	.+32     	; 0x1342 <__fixunssfsi+0x46>
    1322:	86 d0       	rcall	.+268    	; 0x1430 <__fp_zero>
    1324:	b1 e0       	ldi	r27, 0x01	; 1
    1326:	08 95       	ret
    1328:	83 c0       	rjmp	.+262    	; 0x1430 <__fp_zero>
    132a:	67 2f       	mov	r22, r23
    132c:	78 2f       	mov	r23, r24
    132e:	88 27       	eor	r24, r24
    1330:	b8 5f       	subi	r27, 0xF8	; 248
    1332:	39 f0       	breq	.+14     	; 0x1342 <__fixunssfsi+0x46>
    1334:	b9 3f       	cpi	r27, 0xF9	; 249
    1336:	cc f3       	brlt	.-14     	; 0x132a <__fixunssfsi+0x2e>
    1338:	86 95       	lsr	r24
    133a:	77 95       	ror	r23
    133c:	67 95       	ror	r22
    133e:	b3 95       	inc	r27
    1340:	d9 f7       	brne	.-10     	; 0x1338 <__fixunssfsi+0x3c>
    1342:	3e f4       	brtc	.+14     	; 0x1352 <__fixunssfsi+0x56>
    1344:	90 95       	com	r25
    1346:	80 95       	com	r24
    1348:	70 95       	com	r23
    134a:	61 95       	neg	r22
    134c:	7f 4f       	sbci	r23, 0xFF	; 255
    134e:	8f 4f       	sbci	r24, 0xFF	; 255
    1350:	9f 4f       	sbci	r25, 0xFF	; 255
    1352:	08 95       	ret

00001354 <__fp_cmp>:
    1354:	99 0f       	add	r25, r25
    1356:	00 08       	sbc	r0, r0
    1358:	55 0f       	add	r21, r21
    135a:	aa 0b       	sbc	r26, r26
    135c:	e0 e8       	ldi	r30, 0x80	; 128
    135e:	fe ef       	ldi	r31, 0xFE	; 254
    1360:	16 16       	cp	r1, r22
    1362:	17 06       	cpc	r1, r23
    1364:	e8 07       	cpc	r30, r24
    1366:	f9 07       	cpc	r31, r25
    1368:	c0 f0       	brcs	.+48     	; 0x139a <__fp_cmp+0x46>
    136a:	12 16       	cp	r1, r18
    136c:	13 06       	cpc	r1, r19
    136e:	e4 07       	cpc	r30, r20
    1370:	f5 07       	cpc	r31, r21
    1372:	98 f0       	brcs	.+38     	; 0x139a <__fp_cmp+0x46>
    1374:	62 1b       	sub	r22, r18
    1376:	73 0b       	sbc	r23, r19
    1378:	84 0b       	sbc	r24, r20
    137a:	95 0b       	sbc	r25, r21
    137c:	39 f4       	brne	.+14     	; 0x138c <__fp_cmp+0x38>
    137e:	0a 26       	eor	r0, r26
    1380:	61 f0       	breq	.+24     	; 0x139a <__fp_cmp+0x46>
    1382:	23 2b       	or	r18, r19
    1384:	24 2b       	or	r18, r20
    1386:	25 2b       	or	r18, r21
    1388:	21 f4       	brne	.+8      	; 0x1392 <__fp_cmp+0x3e>
    138a:	08 95       	ret
    138c:	0a 26       	eor	r0, r26
    138e:	09 f4       	brne	.+2      	; 0x1392 <__fp_cmp+0x3e>
    1390:	a1 40       	sbci	r26, 0x01	; 1
    1392:	a6 95       	lsr	r26
    1394:	8f ef       	ldi	r24, 0xFF	; 255
    1396:	81 1d       	adc	r24, r1
    1398:	81 1d       	adc	r24, r1
    139a:	08 95       	ret

0000139c <__fp_inf>:
    139c:	97 f9       	bld	r25, 7
    139e:	9f 67       	ori	r25, 0x7F	; 127
    13a0:	80 e8       	ldi	r24, 0x80	; 128
    13a2:	70 e0       	ldi	r23, 0x00	; 0
    13a4:	60 e0       	ldi	r22, 0x00	; 0
    13a6:	08 95       	ret

000013a8 <__fp_nan>:
    13a8:	9f ef       	ldi	r25, 0xFF	; 255
    13aa:	80 ec       	ldi	r24, 0xC0	; 192
    13ac:	08 95       	ret

000013ae <__fp_pscA>:
    13ae:	00 24       	eor	r0, r0
    13b0:	0a 94       	dec	r0
    13b2:	16 16       	cp	r1, r22
    13b4:	17 06       	cpc	r1, r23
    13b6:	18 06       	cpc	r1, r24
    13b8:	09 06       	cpc	r0, r25
    13ba:	08 95       	ret

000013bc <__fp_pscB>:
    13bc:	00 24       	eor	r0, r0
    13be:	0a 94       	dec	r0
    13c0:	12 16       	cp	r1, r18
    13c2:	13 06       	cpc	r1, r19
    13c4:	14 06       	cpc	r1, r20
    13c6:	05 06       	cpc	r0, r21
    13c8:	08 95       	ret

000013ca <__fp_round>:
    13ca:	09 2e       	mov	r0, r25
    13cc:	03 94       	inc	r0
    13ce:	00 0c       	add	r0, r0
    13d0:	11 f4       	brne	.+4      	; 0x13d6 <__fp_round+0xc>
    13d2:	88 23       	and	r24, r24
    13d4:	52 f0       	brmi	.+20     	; 0x13ea <__fp_round+0x20>
    13d6:	bb 0f       	add	r27, r27
    13d8:	40 f4       	brcc	.+16     	; 0x13ea <__fp_round+0x20>
    13da:	bf 2b       	or	r27, r31
    13dc:	11 f4       	brne	.+4      	; 0x13e2 <__fp_round+0x18>
    13de:	60 ff       	sbrs	r22, 0
    13e0:	04 c0       	rjmp	.+8      	; 0x13ea <__fp_round+0x20>
    13e2:	6f 5f       	subi	r22, 0xFF	; 255
    13e4:	7f 4f       	sbci	r23, 0xFF	; 255
    13e6:	8f 4f       	sbci	r24, 0xFF	; 255
    13e8:	9f 4f       	sbci	r25, 0xFF	; 255
    13ea:	08 95       	ret

000013ec <__fp_split3>:
    13ec:	57 fd       	sbrc	r21, 7
    13ee:	90 58       	subi	r25, 0x80	; 128
    13f0:	44 0f       	add	r20, r20
    13f2:	55 1f       	adc	r21, r21
    13f4:	59 f0       	breq	.+22     	; 0x140c <__fp_splitA+0x10>
    13f6:	5f 3f       	cpi	r21, 0xFF	; 255
    13f8:	71 f0       	breq	.+28     	; 0x1416 <__fp_splitA+0x1a>
    13fa:	47 95       	ror	r20

000013fc <__fp_splitA>:
    13fc:	88 0f       	add	r24, r24
    13fe:	97 fb       	bst	r25, 7
    1400:	99 1f       	adc	r25, r25
    1402:	61 f0       	breq	.+24     	; 0x141c <__fp_splitA+0x20>
    1404:	9f 3f       	cpi	r25, 0xFF	; 255
    1406:	79 f0       	breq	.+30     	; 0x1426 <__fp_splitA+0x2a>
    1408:	87 95       	ror	r24
    140a:	08 95       	ret
    140c:	12 16       	cp	r1, r18
    140e:	13 06       	cpc	r1, r19
    1410:	14 06       	cpc	r1, r20
    1412:	55 1f       	adc	r21, r21
    1414:	f2 cf       	rjmp	.-28     	; 0x13fa <__fp_split3+0xe>
    1416:	46 95       	lsr	r20
    1418:	f1 df       	rcall	.-30     	; 0x13fc <__fp_splitA>
    141a:	08 c0       	rjmp	.+16     	; 0x142c <__fp_splitA+0x30>
    141c:	16 16       	cp	r1, r22
    141e:	17 06       	cpc	r1, r23
    1420:	18 06       	cpc	r1, r24
    1422:	99 1f       	adc	r25, r25
    1424:	f1 cf       	rjmp	.-30     	; 0x1408 <__fp_splitA+0xc>
    1426:	86 95       	lsr	r24
    1428:	71 05       	cpc	r23, r1
    142a:	61 05       	cpc	r22, r1
    142c:	08 94       	sec
    142e:	08 95       	ret

00001430 <__fp_zero>:
    1430:	e8 94       	clt

00001432 <__fp_szero>:
    1432:	bb 27       	eor	r27, r27
    1434:	66 27       	eor	r22, r22
    1436:	77 27       	eor	r23, r23
    1438:	cb 01       	movw	r24, r22
    143a:	97 f9       	bld	r25, 7
    143c:	08 95       	ret

0000143e <__gesf2>:
    143e:	8a df       	rcall	.-236    	; 0x1354 <__fp_cmp>
    1440:	08 f4       	brcc	.+2      	; 0x1444 <__gesf2+0x6>
    1442:	8f ef       	ldi	r24, 0xFF	; 255
    1444:	08 95       	ret

00001446 <__mulsf3>:
    1446:	0b d0       	rcall	.+22     	; 0x145e <__mulsf3x>
    1448:	c0 cf       	rjmp	.-128    	; 0x13ca <__fp_round>
    144a:	b1 df       	rcall	.-158    	; 0x13ae <__fp_pscA>
    144c:	28 f0       	brcs	.+10     	; 0x1458 <__mulsf3+0x12>
    144e:	b6 df       	rcall	.-148    	; 0x13bc <__fp_pscB>
    1450:	18 f0       	brcs	.+6      	; 0x1458 <__mulsf3+0x12>
    1452:	95 23       	and	r25, r21
    1454:	09 f0       	breq	.+2      	; 0x1458 <__mulsf3+0x12>
    1456:	a2 cf       	rjmp	.-188    	; 0x139c <__fp_inf>
    1458:	a7 cf       	rjmp	.-178    	; 0x13a8 <__fp_nan>
    145a:	11 24       	eor	r1, r1
    145c:	ea cf       	rjmp	.-44     	; 0x1432 <__fp_szero>

0000145e <__mulsf3x>:
    145e:	c6 df       	rcall	.-116    	; 0x13ec <__fp_split3>
    1460:	a0 f3       	brcs	.-24     	; 0x144a <__mulsf3+0x4>

00001462 <__mulsf3_pse>:
    1462:	95 9f       	mul	r25, r21
    1464:	d1 f3       	breq	.-12     	; 0x145a <__mulsf3+0x14>
    1466:	95 0f       	add	r25, r21
    1468:	50 e0       	ldi	r21, 0x00	; 0
    146a:	55 1f       	adc	r21, r21
    146c:	62 9f       	mul	r22, r18
    146e:	f0 01       	movw	r30, r0
    1470:	72 9f       	mul	r23, r18
    1472:	bb 27       	eor	r27, r27
    1474:	f0 0d       	add	r31, r0
    1476:	b1 1d       	adc	r27, r1
    1478:	63 9f       	mul	r22, r19
    147a:	aa 27       	eor	r26, r26
    147c:	f0 0d       	add	r31, r0
    147e:	b1 1d       	adc	r27, r1
    1480:	aa 1f       	adc	r26, r26
    1482:	64 9f       	mul	r22, r20
    1484:	66 27       	eor	r22, r22
    1486:	b0 0d       	add	r27, r0
    1488:	a1 1d       	adc	r26, r1
    148a:	66 1f       	adc	r22, r22
    148c:	82 9f       	mul	r24, r18
    148e:	22 27       	eor	r18, r18
    1490:	b0 0d       	add	r27, r0
    1492:	a1 1d       	adc	r26, r1
    1494:	62 1f       	adc	r22, r18
    1496:	73 9f       	mul	r23, r19
    1498:	b0 0d       	add	r27, r0
    149a:	a1 1d       	adc	r26, r1
    149c:	62 1f       	adc	r22, r18
    149e:	83 9f       	mul	r24, r19
    14a0:	a0 0d       	add	r26, r0
    14a2:	61 1d       	adc	r22, r1
    14a4:	22 1f       	adc	r18, r18
    14a6:	74 9f       	mul	r23, r20
    14a8:	33 27       	eor	r19, r19
    14aa:	a0 0d       	add	r26, r0
    14ac:	61 1d       	adc	r22, r1
    14ae:	23 1f       	adc	r18, r19
    14b0:	84 9f       	mul	r24, r20
    14b2:	60 0d       	add	r22, r0
    14b4:	21 1d       	adc	r18, r1
    14b6:	82 2f       	mov	r24, r18
    14b8:	76 2f       	mov	r23, r22
    14ba:	6a 2f       	mov	r22, r26
    14bc:	11 24       	eor	r1, r1
    14be:	9f 57       	subi	r25, 0x7F	; 127
    14c0:	50 40       	sbci	r21, 0x00	; 0
    14c2:	8a f0       	brmi	.+34     	; 0x14e6 <__mulsf3_pse+0x84>
    14c4:	e1 f0       	breq	.+56     	; 0x14fe <__mulsf3_pse+0x9c>
    14c6:	88 23       	and	r24, r24
    14c8:	4a f0       	brmi	.+18     	; 0x14dc <__mulsf3_pse+0x7a>
    14ca:	ee 0f       	add	r30, r30
    14cc:	ff 1f       	adc	r31, r31
    14ce:	bb 1f       	adc	r27, r27
    14d0:	66 1f       	adc	r22, r22
    14d2:	77 1f       	adc	r23, r23
    14d4:	88 1f       	adc	r24, r24
    14d6:	91 50       	subi	r25, 0x01	; 1
    14d8:	50 40       	sbci	r21, 0x00	; 0
    14da:	a9 f7       	brne	.-22     	; 0x14c6 <__mulsf3_pse+0x64>
    14dc:	9e 3f       	cpi	r25, 0xFE	; 254
    14de:	51 05       	cpc	r21, r1
    14e0:	70 f0       	brcs	.+28     	; 0x14fe <__mulsf3_pse+0x9c>
    14e2:	5c cf       	rjmp	.-328    	; 0x139c <__fp_inf>
    14e4:	a6 cf       	rjmp	.-180    	; 0x1432 <__fp_szero>
    14e6:	5f 3f       	cpi	r21, 0xFF	; 255
    14e8:	ec f3       	brlt	.-6      	; 0x14e4 <__mulsf3_pse+0x82>
    14ea:	98 3e       	cpi	r25, 0xE8	; 232
    14ec:	dc f3       	brlt	.-10     	; 0x14e4 <__mulsf3_pse+0x82>
    14ee:	86 95       	lsr	r24
    14f0:	77 95       	ror	r23
    14f2:	67 95       	ror	r22
    14f4:	b7 95       	ror	r27
    14f6:	f7 95       	ror	r31
    14f8:	e7 95       	ror	r30
    14fa:	9f 5f       	subi	r25, 0xFF	; 255
    14fc:	c1 f7       	brne	.-16     	; 0x14ee <__mulsf3_pse+0x8c>
    14fe:	fe 2b       	or	r31, r30
    1500:	88 0f       	add	r24, r24
    1502:	91 1d       	adc	r25, r1
    1504:	96 95       	lsr	r25
    1506:	87 95       	ror	r24
    1508:	97 f9       	bld	r25, 7
    150a:	08 95       	ret

0000150c <__udivmodqi4>:
    150c:	99 1b       	sub	r25, r25
    150e:	79 e0       	ldi	r23, 0x09	; 9
    1510:	04 c0       	rjmp	.+8      	; 0x151a <__udivmodqi4_ep>

00001512 <__udivmodqi4_loop>:
    1512:	99 1f       	adc	r25, r25
    1514:	96 17       	cp	r25, r22
    1516:	08 f0       	brcs	.+2      	; 0x151a <__udivmodqi4_ep>
    1518:	96 1b       	sub	r25, r22

0000151a <__udivmodqi4_ep>:
    151a:	88 1f       	adc	r24, r24
    151c:	7a 95       	dec	r23
    151e:	c9 f7       	brne	.-14     	; 0x1512 <__udivmodqi4_loop>
    1520:	80 95       	com	r24
    1522:	08 95       	ret

00001524 <__udivmodsi4>:
    1524:	a1 e2       	ldi	r26, 0x21	; 33
    1526:	1a 2e       	mov	r1, r26
    1528:	aa 1b       	sub	r26, r26
    152a:	bb 1b       	sub	r27, r27
    152c:	fd 01       	movw	r30, r26
    152e:	0d c0       	rjmp	.+26     	; 0x154a <__udivmodsi4_ep>

00001530 <__udivmodsi4_loop>:
    1530:	aa 1f       	adc	r26, r26
    1532:	bb 1f       	adc	r27, r27
    1534:	ee 1f       	adc	r30, r30
    1536:	ff 1f       	adc	r31, r31
    1538:	a2 17       	cp	r26, r18
    153a:	b3 07       	cpc	r27, r19
    153c:	e4 07       	cpc	r30, r20
    153e:	f5 07       	cpc	r31, r21
    1540:	20 f0       	brcs	.+8      	; 0x154a <__udivmodsi4_ep>
    1542:	a2 1b       	sub	r26, r18
    1544:	b3 0b       	sbc	r27, r19
    1546:	e4 0b       	sbc	r30, r20
    1548:	f5 0b       	sbc	r31, r21

0000154a <__udivmodsi4_ep>:
    154a:	66 1f       	adc	r22, r22
    154c:	77 1f       	adc	r23, r23
    154e:	88 1f       	adc	r24, r24
    1550:	99 1f       	adc	r25, r25
    1552:	1a 94       	dec	r1
    1554:	69 f7       	brne	.-38     	; 0x1530 <__udivmodsi4_loop>
    1556:	60 95       	com	r22
    1558:	70 95       	com	r23
    155a:	80 95       	com	r24
    155c:	90 95       	com	r25
    155e:	9b 01       	movw	r18, r22
    1560:	ac 01       	movw	r20, r24
    1562:	bd 01       	movw	r22, r26
    1564:	cf 01       	movw	r24, r30
    1566:	08 95       	ret

00001568 <__tablejump2__>:
    1568:	ee 0f       	add	r30, r30
    156a:	ff 1f       	adc	r31, r31
    156c:	00 24       	eor	r0, r0
    156e:	00 1c       	adc	r0, r0
    1570:	0b be       	out	0x3b, r0	; 59
    1572:	07 90       	elpm	r0, Z+
    1574:	f6 91       	elpm	r31, Z
    1576:	e0 2d       	mov	r30, r0
    1578:	09 94       	ijmp

0000157a <_exit>:
    157a:	f8 94       	cli

0000157c <__stop_program>:
    157c:	ff cf       	rjmp	.-2      	; 0x157c <__stop_program>
